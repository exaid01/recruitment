{"ast":null,"code":"import { Message } from 'element-ui';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: '',\n        role: '0'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于6位',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post('/api/auth/login', this.loginForm).then(response => {\n            const {\n              token,\n              id,\n              username,\n              email,\n              role\n            } = response.data;\n            this.$store.dispatch('login', {\n              user: {\n                id,\n                username,\n                email,\n                role\n              },\n              token\n            });\n            Message.success('登录成功');\n            // 跳转到首页或之前的页面\n            const redirect = this.$route.query.redirect || '/';\n            this.$router.push(redirect);\n          }).catch(error => {\n            this.$message.error('登录失败: ' + (error.response && error.response.data && error.response.data.message ? error.response.data.message : '用户名或密码错误'));\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["Message","name","data","loginForm","username","password","role","rules","required","message","trigger","min","methods","submitForm","formName","$refs","validate","valid","$axios","post","then","response","token","id","email","$store","dispatch","user","success","redirect","$route","query","$router","push","catch","error","$message","goToRegister"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>登录</span>\n      </div>\n      <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色\" prop=\"role\">\n          <el-select v-model=\"loginForm.role\" placeholder=\"请选择角色\">\n            <el-option label=\"求职者\" value=\"0\"></el-option>\n            <el-option label=\"企业\" value=\"1\"></el-option>\n            <el-option label=\"管理员\" value=\"2\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('loginForm')\" style=\"width: 100%\">登录</el-button>\n        </el-form-item>\n        <el-form-item>\n          <span>还没有账号？</span>\n          <el-button type=\"text\" @click=\"goToRegister\">立即注册</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { Message } from 'element-ui';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: '',\n        role: '0'\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\n        ],\n        role: [\n          { required: true, message: '请选择角色', trigger: 'change' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$axios.post('/api/auth/login', this.loginForm)\n            .then(response => {\n              const { token, id, username, email, role } = response.data;\n              this.$store.dispatch('login', {\n                user: {\n                  id, username, email, role\n                },\n                token\n              });\n              Message.success('登录成功');\n              // 跳转到首页或之前的页面\n              const redirect = this.$route.query.redirect || '/';\n              this.$router.push(redirect);\n            })\n            .catch(error => {\n              this.$message.error('登录失败: ' + (error.response && error.response.data && error.response.data.message ? error.response.data.message : '用户名或密码错误'));\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n.login-card {\n  width: 400px;\n}\n</style>"],"mappings":"AAiCA,SAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAH,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,IAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA,yBAAAhB,SAAA,EACAiB,IAAA,CAAAC,QAAA;YACA;cAAAC,KAAA;cAAAC,EAAA;cAAAnB,QAAA;cAAAoB,KAAA;cAAAlB;YAAA,IAAAe,QAAA,CAAAnB,IAAA;YACA,KAAAuB,MAAA,CAAAC,QAAA;cACAC,IAAA;gBACAJ,EAAA;gBAAAnB,QAAA;gBAAAoB,KAAA;gBAAAlB;cACA;cACAgB;YACA;YACAtB,OAAA,CAAA4B,OAAA;YACA;YACA,MAAAC,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;YACA,KAAAG,OAAA,CAAAC,IAAA,CAAAJ,QAAA;UACA,GACAK,KAAA,CAAAC,KAAA;YACA,KAAAC,QAAA,CAAAD,KAAA,aAAAA,KAAA,CAAAd,QAAA,IAAAc,KAAA,CAAAd,QAAA,CAAAnB,IAAA,IAAAiC,KAAA,CAAAd,QAAA,CAAAnB,IAAA,CAAAO,OAAA,GAAA0B,KAAA,CAAAd,QAAA,CAAAnB,IAAA,CAAAO,OAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACA4B,aAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default {\n  name: 'JobDetail',\n  data() {\n    return {\n      job: null,\n      isJobSeeker: false,\n      isCompany: false,\n      isCurrentCompany: false\n    };\n  },\n  created() {\n    this.getJobDetail();\n    this.checkUserRole();\n  },\n  methods: {\n    getJobDetail() {\n      const jobId = this.$route.params.id;\n      this.$axios.get(`/jobs/${jobId}`).then(response => {\n        // 模拟企业名称，实际项目中需要关联企业表\n        this.job = {\n          ...response.data,\n          companyName: '企业名称 ' + Math.floor(Math.random() * 100)\n        };\n        this.checkIsCurrentCompany();\n      }).catch(error => {\n        this.$message.error('获取岗位详情失败: ' + (error.response.data.message || '服务器错误'));\n      });\n    },\n    checkUserRole() {\n      if (this.$store.getters.isLoggedIn) {\n        const role = this.$store.state.user.role;\n        this.isJobSeeker = role === 0;\n        this.isCompany = role === 1;\n      }\n    },\n    checkIsCurrentCompany() {\n      if (this.isCompany && this.job) {\n        this.isCurrentCompany = this.$store.state.user.id === this.job.companyId;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","job","isJobSeeker","isCompany","isCurrentCompany","created","getJobDetail","checkUserRole","methods","jobId","$route","params","id","$axios","get","then","response","companyName","Math","floor","random","checkIsCurrentCompany","catch","error","$message","message","$store","getters","isLoggedIn","role","state","user","companyId"],"sources":["src/views/JobDetail.vue"],"sourcesContent":["<template>\n  <div class=\"job-detail-container\">\n    <el-card class=\"job-detail-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>岗位详情</span>\n      </div>\n      <div v-if=\"job\" class=\"job-detail-content\">\n        <div class=\"job-basic-info\">\n          <h2>{{job.title}}</h2>\n          <div class=\"job-meta\">\n            <span class=\"salary\">{{job.salary}}</span>\n            <span>{{job.location}}</span>\n          </div>\n          <div class=\"company-info\">\n            <h3>{{job.companyName}}</h3>\n          </div>\n        </div>\n\n        <div class=\"job-description\">\n          <h3>岗位描述</h3>\n          <p>{{job.description}}</p>\n        </div>\n\n        <div class=\"job-requirements\">\n          <h3>工作要求</h3>\n          <p>{{job.requirements}}</p>\n        </div>\n\n        <div class=\"job-benefits\">\n          <h3>福利待遇</h3>\n          <p>{{job.benefits}}</p>\n        </div>\n\n        <div class=\"job-actions\">\n          <el-button type=\"primary\" v-if=\"isJobSeeker\">申请该岗位</el-button>\n          <el-button type=\"primary\" v-if=\"isCompany && isCurrentCompany\">编辑岗位</el-button>\n          <el-button type=\"danger\" v-if=\"isCompany && isCurrentCompany\">下架岗位</el-button>\n        </div>\n      </div>\n      <div v-else class=\"loading\">\n        <el-loading-spinner></el-loading-spinner>\n        <p>加载中...</p>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'JobDetail',\n  data() {\n    return {\n      job: null,\n      isJobSeeker: false,\n      isCompany: false,\n      isCurrentCompany: false\n    };\n  },\n  created() {\n    this.getJobDetail();\n    this.checkUserRole();\n  },\n  methods: {\n    getJobDetail() {\n      const jobId = this.$route.params.id;\n      this.$axios.get(`/jobs/${jobId}`)\n        .then(response => {\n          // 模拟企业名称，实际项目中需要关联企业表\n          this.job = {\n            ...response.data,\n            companyName: '企业名称 ' + Math.floor(Math.random() * 100)\n          };\n          this.checkIsCurrentCompany();\n        })\n        .catch(error => {\n          this.$message.error('获取岗位详情失败: ' + (error.response.data.message || '服务器错误'));\n        });\n    },\n    checkUserRole() {\n      if (this.$store.getters.isLoggedIn) {\n        const role = this.$store.state.user.role;\n        this.isJobSeeker = role === 0;\n        this.isCompany = role === 1;\n      }\n    },\n    checkIsCurrentCompany() {\n      if (this.isCompany && this.job) {\n        this.isCurrentCompany = this.$store.state.user.id === this.job.companyId;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.job-detail-container {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n.job-detail-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.job-detail-content {\n  padding: 20px;\n}\n.job-basic-info {\n  margin-bottom: 30px;\n}\n.job-basic-info h2 {\n  font-size: 24px;\n  margin-bottom: 15px;\n}\n.job-meta {\n  display: flex;\n  margin-bottom: 15px;\n  font-size: 16px;\n}\n.salary {\n  color: #ff7e00;\n  font-weight: bold;\n  margin-right: 20px;\n}\n.company-info {\n  margin-top: 20px;\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n.company-info h3 {\n  font-size: 18px;\n  color: #333;\n}\n.job-description, .job-requirements, .job-benefits {\n  margin-bottom: 30px;\n}\n.job-description h3, .job-requirements h3, .job-benefits h3 {\n  font-size: 18px;\n  margin-bottom: 15px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n.job-actions {\n  margin-top: 30px;\n  display: flex;\n  gap: 10px;\n}\n.loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 50px 0;\n}\n</style>"],"mappings":"AAgDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,WAAA;MACAC,SAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAF,aAAA;MACA,MAAAG,KAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,UAAAL,KAAA,IACAM,IAAA,CAAAC,QAAA;QACA;QACA,KAAAf,GAAA;UACA,GAAAe,QAAA,CAAAhB,IAAA;UACAiB,WAAA,YAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;QACA;QACA,KAAAC,qBAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,iBAAAA,KAAA,CAAAP,QAAA,CAAAhB,IAAA,CAAAyB,OAAA;MACA;IACA;IACAlB,cAAA;MACA,SAAAmB,MAAA,CAAAC,OAAA,CAAAC,UAAA;QACA,MAAAC,IAAA,QAAAH,MAAA,CAAAI,KAAA,CAAAC,IAAA,CAAAF,IAAA;QACA,KAAA3B,WAAA,GAAA2B,IAAA;QACA,KAAA1B,SAAA,GAAA0B,IAAA;MACA;IACA;IACAR,sBAAA;MACA,SAAAlB,SAAA,SAAAF,GAAA;QACA,KAAAG,gBAAA,QAAAsB,MAAA,CAAAI,KAAA,CAAAC,IAAA,CAAAnB,EAAA,UAAAX,GAAA,CAAA+B,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
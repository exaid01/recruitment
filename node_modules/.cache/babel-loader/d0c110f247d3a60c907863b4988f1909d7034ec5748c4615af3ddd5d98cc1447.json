{"ast":null,"code":"export default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      activeTab: 'userManagement',\n      users: [],\n      dynamics: [],\n      comments: []\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.loadUsers();\n    this.loadDynamics();\n    this.loadComments();\n  },\n  methods: {\n    goToFrontend() {\n      this.$router.push('/');\n    },\n    checkAdminRole() {\n      if (this.$store.state.user.role !== 2) {\n        this.$message.error('您没有权限访问管理后台');\n        this.$router.push('/');\n      }\n    },\n    loadUsers() {\n      // 模拟数据，实际项目中应从后端获取\n      this.users = [{\n        id: 1,\n        username: 'user1',\n        email: 'user1@example.com',\n        role: 0,\n        status: 1\n      }, {\n        id: 2,\n        username: 'company1',\n        email: 'company1@example.com',\n        role: 1,\n        status: 1\n      }, {\n        id: 3,\n        username: 'admin',\n        email: 'admin@example.com',\n        role: 2,\n        status: 1\n      }];\n    },\n    loadDynamics() {\n      // 模拟数据\n      this.dynamics = [{\n        id: 1,\n        userId: 1,\n        content: '这是一条测试动态',\n        status: 0\n      }, {\n        id: 2,\n        userId: 1,\n        content: '这是另一条测试动态',\n        status: 0\n      }];\n    },\n    loadComments() {\n      // 模拟数据\n      this.comments = [{\n        id: 1,\n        userId: 1,\n        content: '这是一条测试评论',\n        status: 0\n      }, {\n        id: 2,\n        userId: 2,\n        content: '这是另一条测试评论',\n        status: 0\n      }];\n    },\n    toggleUserStatus(user) {\n      const newStatus = user.status === 1 ? 0 : 1;\n      // 模拟API调用\n      setTimeout(() => {\n        user.status = newStatus;\n        this.$message.success(`用户${newStatus === 1 ? '启用' : '禁用'}成功`);\n      }, 500);\n    },\n    approveDynamic(dynamic) {\n      // 模拟API调用\n      setTimeout(() => {\n        dynamic.status = 1;\n        this.$message.success('动态审核通过');\n      }, 500);\n    },\n    rejectDynamic(dynamic) {\n      // 模拟API调用\n      setTimeout(() => {\n        dynamic.status = 2;\n        this.$message.success('动态已拒绝');\n      }, 500);\n    },\n    approveComment(comment) {\n      // 模拟API调用\n      setTimeout(() => {\n        comment.status = 1;\n        this.$message.success('评论审核通过');\n      }, 500);\n    },\n    rejectComment(comment) {\n      // 模拟API调用\n      setTimeout(() => {\n        comment.status = 2;\n        this.$message.success('评论已拒绝');\n      }, 500);\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeTab","users","dynamics","comments","created","checkAdminRole","loadUsers","loadDynamics","loadComments","methods","goToFrontend","$router","push","$store","state","user","role","$message","error","id","username","email","status","userId","content","toggleUserStatus","newStatus","setTimeout","success","approveDynamic","dynamic","rejectDynamic","approveComment","comment","rejectComment"],"sources":["src/views/admin/AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-container\">\n    <el-container>\n      <el-header style=\"display: flex; justify-content: space-between; align-items: center;\">\n  <span>招聘网站管理后台</span>\n  <el-button type=\"primary\" @click=\"goToFrontend\">返回前台</el-button>\n</el-header>\n      <el-container>\n        <el-aside width=\"200px\">\n          <el-menu :default-openeds=\"['1', '2']\">\n            <el-submenu index=\"1\">\n              <template slot=\"title\"><i class=\"el-icon-user\"></i>用户管理</template>\n              <el-menu-item index=\"1-1\" @click=\"activeTab = 'userManagement'\">用户列表</el-menu-item>\n            </el-submenu>\n            <el-submenu index=\"2\">\n              <template slot=\"title\"><i class=\"el-icon-edit\"></i>内容审核</template>\n              <el-menu-item index=\"2-1\" @click=\"activeTab = 'dynamicReview'\">动态审核</el-menu-item>\n              <el-menu-item index=\"2-2\" @click=\"activeTab = 'commentReview'\">评论审核</el-menu-item>\n            </el-submenu>\n          </el-menu>\n        </el-aside>\n        <el-main>\n          <div v-if=\"activeTab === 'userManagement'\">\n            <h3>用户管理</h3>\n            <el-table :data=\"users\" style=\"width: 100%\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"username\" label=\"用户名\" width=\"180\"></el-table-column>\n              <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\"></el-table-column>\n              <el-table-column prop=\"role\" label=\"角色\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.role === 0\">求职者</span>\n                  <span v-if=\"scope.row.role === 1\">企业</span>\n                  <span v-if=\"scope.row.role === 2\">管理员</span>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.status === 1\" style=\"color: green\">正常</span>\n                  <span v-if=\"scope.row.status === 0\" style=\"color: red\">禁用</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"150\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"toggleUserStatus(scope.row)\">\n                    {{ scope.row.status === 1 ? '禁用' : '启用' }}\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n\n          <div v-if=\"activeTab === 'dynamicReview'\">\n            <h3>动态审核</h3>\n            <!-- 动态审核内容 -->\n            <el-table :data=\"dynamics\" style=\"width: 100%\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"userId\" label=\"用户ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"content\" label=\"内容\" width=\"300\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.status === 0\" style=\"color: orange\">待审核</span>\n                  <span v-if=\"scope.row.status === 1\" style=\"color: green\">已通过</span>\n                  <span v-if=\"scope.row.status === 2\" style=\"color: red\">已拒绝</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"200\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"approveDynamic(scope.row)\">通过</el-button>\n                  <el-button type=\"danger\" size=\"small\" @click=\"rejectDynamic(scope.row)\">拒绝</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n\n          <div v-if=\"activeTab === 'commentReview'\">\n            <h3>评论审核</h3>\n            <!-- 评论审核内容 -->\n            <el-table :data=\"comments\" style=\"width: 100%\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"userId\" label=\"用户ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"content\" label=\"内容\" width=\"300\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.status === 0\" style=\"color: orange\">待审核</span>\n                  <span v-if=\"scope.row.status === 1\" style=\"color: green\">已通过</span>\n                  <span v-if=\"scope.row.status === 2\" style=\"color: red\">已拒绝</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"200\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"approveComment(scope.row)\">通过</el-button>\n                  <el-button type=\"danger\" size=\"small\" @click=\"rejectComment(scope.row)\">拒绝</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      activeTab: 'userManagement',\n      users: [],\n      dynamics: [],\n      comments: []\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.loadUsers();\n    this.loadDynamics();\n    this.loadComments();\n  },\n  methods: {\n    goToFrontend() {\n      this.$router.push('/');\n    },\n\n    checkAdminRole() {\n      if (this.$store.state.user.role !== 2) {\n        this.$message.error('您没有权限访问管理后台');\n        this.$router.push('/');\n      }\n    },\n    loadUsers() {\n      // 模拟数据，实际项目中应从后端获取\n      this.users = [\n        { id: 1, username: 'user1', email: 'user1@example.com', role: 0, status: 1 },\n        { id: 2, username: 'company1', email: 'company1@example.com', role: 1, status: 1 },\n        { id: 3, username: 'admin', email: 'admin@example.com', role: 2, status: 1 }\n      ];\n    },\n    loadDynamics() {\n      // 模拟数据\n      this.dynamics = [\n        { id: 1, userId: 1, content: '这是一条测试动态', status: 0 },\n        { id: 2, userId: 1, content: '这是另一条测试动态', status: 0 }\n      ];\n    },\n    loadComments() {\n      // 模拟数据\n      this.comments = [\n        { id: 1, userId: 1, content: '这是一条测试评论', status: 0 },\n        { id: 2, userId: 2, content: '这是另一条测试评论', status: 0 }\n      ];\n    },\n    toggleUserStatus(user) {\n      const newStatus = user.status === 1 ? 0 : 1;\n      // 模拟API调用\n      setTimeout(() => {\n        user.status = newStatus;\n        this.$message.success(`用户${newStatus === 1 ? '启用' : '禁用'}成功`);\n      }, 500);\n    },\n    approveDynamic(dynamic) {\n      // 模拟API调用\n      setTimeout(() => {\n        dynamic.status = 1;\n        this.$message.success('动态审核通过');\n      }, 500);\n    },\n    rejectDynamic(dynamic) {\n      // 模拟API调用\n      setTimeout(() => {\n        dynamic.status = 2;\n        this.$message.success('动态已拒绝');\n      }, 500);\n    },\n    approveComment(comment) {\n      // 模拟API调用\n      setTimeout(() => {\n        comment.status = 1;\n        this.$message.success('评论审核通过');\n      }, 500);\n    },\n    rejectComment(comment) {\n      // 模拟API调用\n      setTimeout(() => {\n        comment.status = 2;\n        this.$message.success('评论已拒绝');\n      }, 500);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.admin-container {\n  height: 100vh;\n}\n.el-header {\n  background-color: #1890ff;\n  color: #fff;\n  font-size: 20px;\n  line-height: 60px;\n  text-align: center;\n}\n.el-aside {\n  background-color: #4a6581;\n}\n.el-menu {\n  background-color: #4a6581;\n  color: #ecf0f1;\n}\n.el-submenu__title {\n  color: #fff;\n}\n.el-menu-item {\n  color: #bdc3c7;\n}\n.el-menu-item:hover {\n  background-color: #3498db;\n  color: #fff;\n}\n.el-menu-item.is-active {\n  background-color: #3498db;\n  color: #fff;\n}\n.el-main {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n</style>"],"mappings":"AAuGA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,KAAA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;IACA,KAAAC,SAAA;IACA,KAAAC,YAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACAC,aAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IAEAP,eAAA;MACA,SAAAQ,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;QACA,KAAAP,OAAA,CAAAC,IAAA;MACA;IACA;IACAN,UAAA;MACA;MACA,KAAAL,KAAA,IACA;QAAAkB,EAAA;QAAAC,QAAA;QAAAC,KAAA;QAAAL,IAAA;QAAAM,MAAA;MAAA,GACA;QAAAH,EAAA;QAAAC,QAAA;QAAAC,KAAA;QAAAL,IAAA;QAAAM,MAAA;MAAA,GACA;QAAAH,EAAA;QAAAC,QAAA;QAAAC,KAAA;QAAAL,IAAA;QAAAM,MAAA;MAAA,EACA;IACA;IACAf,aAAA;MACA;MACA,KAAAL,QAAA,IACA;QAAAiB,EAAA;QAAAI,MAAA;QAAAC,OAAA;QAAAF,MAAA;MAAA,GACA;QAAAH,EAAA;QAAAI,MAAA;QAAAC,OAAA;QAAAF,MAAA;MAAA,EACA;IACA;IACAd,aAAA;MACA;MACA,KAAAL,QAAA,IACA;QAAAgB,EAAA;QAAAI,MAAA;QAAAC,OAAA;QAAAF,MAAA;MAAA,GACA;QAAAH,EAAA;QAAAI,MAAA;QAAAC,OAAA;QAAAF,MAAA;MAAA,EACA;IACA;IACAG,iBAAAV,IAAA;MACA,MAAAW,SAAA,GAAAX,IAAA,CAAAO,MAAA;MACA;MACAK,UAAA;QACAZ,IAAA,CAAAO,MAAA,GAAAI,SAAA;QACA,KAAAT,QAAA,CAAAW,OAAA,MAAAF,SAAA;MACA;IACA;IACAG,eAAAC,OAAA;MACA;MACAH,UAAA;QACAG,OAAA,CAAAR,MAAA;QACA,KAAAL,QAAA,CAAAW,OAAA;MACA;IACA;IACAG,cAAAD,OAAA;MACA;MACAH,UAAA;QACAG,OAAA,CAAAR,MAAA;QACA,KAAAL,QAAA,CAAAW,OAAA;MACA;IACA;IACAI,eAAAC,OAAA;MACA;MACAN,UAAA;QACAM,OAAA,CAAAX,MAAA;QACA,KAAAL,QAAA,CAAAW,OAAA;MACA;IACA;IACAM,cAAAD,OAAA;MACA;MACAN,UAAA;QACAM,OAAA,CAAAX,MAAA;QACA,KAAAL,QAAA,CAAAW,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        email: '',\n        phone: '',\n        role: 0,\n        agreeTerms: false\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '用户名长度在3到20个字符之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于6位',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }, {\n          validator: this.validateConfirmPassword,\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱格式',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号格式',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择用户类型',\n          trigger: 'change'\n        }],\n        agreeTerms: [{\n          required: true,\n          validator: this.validateAgreeTerms,\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    validateConfirmPassword(rule, value, callback) {\n      if (value !== this.registerForm.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    },\n    validateAgreeTerms(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请阅读并同意用户协议和隐私政策'));\n      } else {\n        callback();\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post('/api/user/register', this.registerForm).then(() => {\n            this.$message.success('注册成功，请登录');\n            this.$router.push('/login');\n          }).catch(error => {\n            const errorMessage = error.response?.data?.message || '注册信息有误';\n            this.$message.error('注册失败: ' + errorMessage);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","registerForm","username","password","confirmPassword","email","phone","role","agreeTerms","rules","required","message","trigger","min","max","validator","validateConfirmPassword","type","pattern","validateAgreeTerms","methods","rule","value","callback","Error","submitForm","formName","$refs","validate","valid","$axios","post","then","$message","success","$router","push","catch","error","errorMessage","response","goToLogin"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <el-card class=\"register-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>注册</span>\n      </div>\n      <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"registerForm.username\" placeholder=\"请输入用户名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input type=\"password\" v-model=\"registerForm.confirmPassword\" placeholder=\"请确认密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"registerForm.email\" placeholder=\"请输入邮箱\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"registerForm.phone\" placeholder=\"请输入手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户类型\" prop=\"role\">\n          <el-radio-group v-model=\"registerForm.role\">\n            <el-radio :label=\"0\">求职者</el-radio>\n            <el-radio :label=\"1\">企业</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item prop=\"agreeTerms\">\n          <el-checkbox v-model=\"registerForm.agreeTerms\">\n            我已阅读并同意<a href=\"/terms\" target=\"_blank\">用户协议</a>和<a href=\"/privacy\" target=\"_blank\">隐私政策</a>\n          </el-checkbox>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('registerForm')\" style=\"width: 100%\">注册</el-button>\n        </el-form-item>\n        <el-form-item>\n          <span>已有账号？</span>\n          <el-button type=\"text\" @click=\"goToLogin\">立即登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        email: '',\n        phone: '',\n        role: 0,\n        agreeTerms: false\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '用户名长度在3到20个字符之间', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请确认密码', trigger: 'blur' },\n          { validator: this.validateConfirmPassword, trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n        ],\n        phone: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号格式', trigger: 'blur' }\n        ],\n        role: [\n          { required: true, message: '请选择用户类型', trigger: 'change' }\n        ],\n        agreeTerms: [\n          { required: true, validator: this.validateAgreeTerms, trigger: 'change' }\n        ]\n      }\n    }\n  },\n  methods: {\n    validateConfirmPassword(rule, value, callback) {\n      if (value !== this.registerForm.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    },\n    validateAgreeTerms(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请阅读并同意用户协议和隐私政策'));\n      } else {\n        callback();\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$axios.post('/api/user/register', this.registerForm)\n            .then(() => {\n              this.$message.success('注册成功，请登录');\n              this.$router.push('/login');\n            })\n            .catch(error => {\n              const errorMessage = error.response?.data?.message || '注册信息有误';\n              this.$message.error('注册失败: ' + errorMessage);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f7fa;\n}\n.register-card {\n  width: 500px;\n}\n</style>"],"mappings":"AA8CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,KAAA;QACAC,KAAA;QACAC,IAAA;QACAC,UAAA;MACA;MACAC,KAAA;QACAP,QAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,QAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,eAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,SAAA,OAAAC,uBAAA;UAAAJ,OAAA;QAAA,EACA;QACAP,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAK,IAAA;UAAAN,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,KAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAM,OAAA;UAAAP,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,IAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,UAAA,GACA;UAAAE,QAAA;UAAAK,SAAA,OAAAI,kBAAA;UAAAP,OAAA;QAAA;MAEA;IACA;EACA;EACAQ,OAAA;IACAJ,wBAAAK,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,UAAArB,YAAA,CAAAE,QAAA;QACAoB,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACAJ,mBAAAE,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACAE,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA,4BAAA9B,YAAA,EACA+B,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACA,MAAAC,YAAA,GAAAD,KAAA,CAAAE,QAAA,EAAAxC,IAAA,EAAAW,OAAA;YACA,KAAAsB,QAAA,CAAAK,KAAA,YAAAC,YAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAE,UAAA;MACA,KAAAN,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
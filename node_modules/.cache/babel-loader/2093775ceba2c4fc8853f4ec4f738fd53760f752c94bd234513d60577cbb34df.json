{"ast":null,"code":"export default {\n  name: 'JobDetail',\n  data() {\n    return {\n      job: null,\n      isJobSeeker: false,\n      isCompany: false,\n      isCurrentCompany: false\n    };\n  },\n  created() {\n    this.getJobDetail();\n    this.checkUserRole();\n  },\n  methods: {\n    getJobDetail() {\n      const jobId = this.$route.params.id;\n      // 模拟数据，实际项目中替换为API调用\n      const hotJobs = [{\n        id: 1,\n        title: '前端开发工程师',\n        company: '科技有限公司',\n        salary: '15k-25k',\n        location: '北京',\n        description: '负责公司网站和移动端应用的前端开发工作，参与产品需求讨论和技术方案设计。',\n        requirements: '本科及以上学历，计算机相关专业，2年以上前端开发经验，熟悉Vue、React等框架。',\n        benefits: '五险一金，年终奖，定期团建，弹性工作。'\n      }, {\n        id: 2,\n        title: '后端开发工程师',\n        company: '互联网有限公司',\n        salary: '18k-30k',\n        location: '上海',\n        description: '负责公司核心系统的后端开发和维护，设计数据库结构和API接口。',\n        requirements: '本科及以上学历，计算机相关专业，3年以上后端开发经验，熟悉Java、Spring Boot等技术。',\n        benefits: '五险一金，股票期权，带薪年假，节日福利。'\n      }, {\n        id: 3,\n        title: '产品经理',\n        company: '软件有限公司',\n        salary: '20k-35k',\n        location: '广州',\n        description: '负责产品的需求分析、功能规划和项目管理，协调研发、设计和测试团队。',\n        requirements: '本科及以上学历，2年以上产品经理经验，有互联网产品经验者优先。',\n        benefits: '五险一金，绩效奖金，定期培训，晋升空间大。'\n      }, {\n        id: 4,\n        title: 'UI设计师',\n        company: '设计有限公司',\n        salary: '12k-22k',\n        location: '深圳',\n        description: '负责产品的界面设计和用户体验优化，参与产品设计讨论和用户研究。',\n        requirements: '本科及以上学历，设计相关专业，2年以上UI设计经验，熟练使用Figma、Sketch等工具。',\n        benefits: '五险一金，创意奖金，定期体检，员工旅游。'\n      }];\n      this.job = hotJobs.find(job => job.id === parseInt(jobId));\n      if (this.job) {\n        this.job.companyName = this.job.company;\n        this.checkIsCurrentCompany();\n      } else {\n        this.$message.error('未找到该岗位信息');\n      }\n    },\n    checkUserRole() {\n      if (this.$store.getters.isLoggedIn) {\n        const role = this.$store.state.user.role;\n        this.isJobSeeker = role === 0;\n        this.isCompany = role === 1;\n      }\n    },\n    checkIsCurrentCompany() {\n      if (this.isCompany && this.job) {\n        this.isCurrentCompany = this.$store.state.user.id === this.job.companyId;\n      }\n    },\n    handleUploadSuccess() {\n      this.$message.success('简历上传成功！');\n\n      // 只有求职者才需要创建聊天室\n      if (this.isJobSeeker && this.job && this.job.companyId) {\n        // 调用创建聊天室的API\n        this.$axios.post('/api/chats/create', {\n          companyId: this.job.companyId\n        }).then(() => {\n          this.$message.success('已成功建立与企业的聊天通道！');\n        }).catch(error => {\n          console.error('创建聊天室失败:', error);\n          this.$message.error('建立聊天通道失败，请稍后重试');\n        });\n      }\n    },\n    handleUploadError(error) {\n      this.$message.error('简历上传失败，请重试。');\n      console.error('Upload error:', error);\n    }\n  }\n};","map":{"version":3,"names":["name","data","job","isJobSeeker","isCompany","isCurrentCompany","created","getJobDetail","checkUserRole","methods","jobId","$route","params","id","hotJobs","title","company","salary","location","description","requirements","benefits","find","parseInt","companyName","checkIsCurrentCompany","$message","error","$store","getters","isLoggedIn","role","state","user","companyId","handleUploadSuccess","success","$axios","post","then","catch","console","handleUploadError"],"sources":["src/views/JobDetail.vue"],"sourcesContent":["<template>\n  <div class=\"job-detail-container\">\n    <el-card class=\"job-detail-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>岗位详情</span>\n      </div>\n      <div v-if=\"job\" class=\"job-detail-content\">\n        <div class=\"job-basic-info\">\n          <h2>{{job.title}}</h2>\n          <div class=\"job-meta\">\n            <span class=\"salary\">{{job.salary}}</span>\n            <span>{{job.location}}</span>\n          </div>\n          <div class=\"company-info\">\n            <h3>{{job.companyName}}</h3>\n          </div>\n        </div>\n\n        <div class=\"job-description\">\n          <h3>岗位描述</h3>\n          <p>{{job.description}}</p>\n        </div>\n\n        <div class=\"job-requirements\">\n          <h3>工作要求</h3>\n          <p>{{job.requirements}}</p>\n        </div>\n\n        <div class=\"job-benefits\">\n          <h3>福利待遇</h3>\n          <p>{{job.benefits}}</p>\n        </div>\n\n        <div class=\"job-actions\">\n          <el-upload\n            class=\"upload-resume\"\n            action=\"/api/resumes/upload\"\n            :headers=\"{ Authorization: `Bearer ${window.localStorage ? window.localStorage.getItem('token') : ''}` }\"\n            :data=\"{ jobId: job.id }\"\n            accept=\".pdf,.doc,.docx,.jpg,.png\"\n            :on-success=\"handleUploadSuccess\"\n            :on-error=\"handleUploadError\"\n            :show-file-list=\"false\"\n          >\n            <el-button type=\"primary\">上传简历</el-button>\n          </el-upload>\n          <el-button type=\"primary\" v-if=\"isCompany && isCurrentCompany\">编辑岗位</el-button>\n          <el-button type=\"danger\" v-if=\"isCompany && isCurrentCompany\">下架岗位</el-button>\n        </div>\n      </div>\n      <div v-else class=\"loading\">\n        <el-loading-spinner></el-loading-spinner>\n        <p>加载中...</p>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'JobDetail',\n  data() {\n    return {\n      job: null,\n      isJobSeeker: false,\n      isCompany: false,\n      isCurrentCompany: false\n    };\n  },\n  created() {\n    this.getJobDetail();\n    this.checkUserRole();\n  },\n  methods: {\n    getJobDetail() {\n      const jobId = this.$route.params.id;\n      // 模拟数据，实际项目中替换为API调用\n      const hotJobs = [\n        { id: 1, title: '前端开发工程师', company: '科技有限公司', salary: '15k-25k', location: '北京', description: '负责公司网站和移动端应用的前端开发工作，参与产品需求讨论和技术方案设计。', requirements: '本科及以上学历，计算机相关专业，2年以上前端开发经验，熟悉Vue、React等框架。', benefits: '五险一金，年终奖，定期团建，弹性工作。' },\n        { id: 2, title: '后端开发工程师', company: '互联网有限公司', salary: '18k-30k', location: '上海', description: '负责公司核心系统的后端开发和维护，设计数据库结构和API接口。', requirements: '本科及以上学历，计算机相关专业，3年以上后端开发经验，熟悉Java、Spring Boot等技术。', benefits: '五险一金，股票期权，带薪年假，节日福利。' },\n        { id: 3, title: '产品经理', company: '软件有限公司', salary: '20k-35k', location: '广州', description: '负责产品的需求分析、功能规划和项目管理，协调研发、设计和测试团队。', requirements: '本科及以上学历，2年以上产品经理经验，有互联网产品经验者优先。', benefits: '五险一金，绩效奖金，定期培训，晋升空间大。' },\n        { id: 4, title: 'UI设计师', company: '设计有限公司', salary: '12k-22k', location: '深圳', description: '负责产品的界面设计和用户体验优化，参与产品设计讨论和用户研究。', requirements: '本科及以上学历，设计相关专业，2年以上UI设计经验，熟练使用Figma、Sketch等工具。', benefits: '五险一金，创意奖金，定期体检，员工旅游。' }\n      ];\n      this.job = hotJobs.find(job => job.id === parseInt(jobId));\n      if (this.job) {\n        this.job.companyName = this.job.company;\n        this.checkIsCurrentCompany();\n      } else {\n        this.$message.error('未找到该岗位信息');\n      }\n    },\n    checkUserRole() {\n      if (this.$store.getters.isLoggedIn) {\n        const role = this.$store.state.user.role;\n        this.isJobSeeker = role === 0;\n        this.isCompany = role === 1;\n      }\n    },\n    checkIsCurrentCompany() {\n      if (this.isCompany && this.job) {\n        this.isCurrentCompany = this.$store.state.user.id === this.job.companyId;\n      }\n    },\n    handleUploadSuccess() {\n      this.$message.success('简历上传成功！');\n      \n      // 只有求职者才需要创建聊天室\n      if (this.isJobSeeker && this.job && this.job.companyId) {\n        // 调用创建聊天室的API\n        this.$axios.post('/api/chats/create', {\n          companyId: this.job.companyId\n        })\n        .then(() => {\n          this.$message.success('已成功建立与企业的聊天通道！');\n        })\n        .catch(error => {\n          console.error('创建聊天室失败:', error);\n          this.$message.error('建立聊天通道失败，请稍后重试');\n        });\n      }\n    },\n    handleUploadError(error) {\n      this.$message.error('简历上传失败，请重试。');\n      console.error('Upload error:', error);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.job-detail-container {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n.job-detail-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.job-detail-content {\n  padding: 20px;\n}\n.job-basic-info {\n  margin-bottom: 30px;\n}\n.job-basic-info h2 {\n  font-size: 24px;\n  margin-bottom: 15px;\n}\n.job-meta {\n  display: flex;\n  margin-bottom: 15px;\n  font-size: 16px;\n}\n.salary {\n  color: #ff7e00;\n  font-weight: bold;\n  margin-right: 20px;\n}\n.company-info {\n  margin-top: 20px;\n  padding-top: 15px;\n  border-top: 1px solid #eee;\n}\n.company-info h3 {\n  font-size: 18px;\n  color: #333;\n}\n.job-description, .job-requirements, .job-benefits {\n  margin-bottom: 30px;\n}\n.job-description h3, .job-requirements h3, .job-benefits h3 {\n  font-size: 18px;\n  margin-bottom: 15px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n.job-actions {\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n}\n.loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 50px 0;\n}\n</style>"],"mappings":"AA2DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,WAAA;MACAC,SAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAF,aAAA;MACA,MAAAG,KAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA;MACA,MAAAC,OAAA,IACA;QAAAD,EAAA;QAAAE,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,QAAA;QAAAC,WAAA;QAAAC,YAAA;QAAAC,QAAA;MAAA,GACA;QAAAR,EAAA;QAAAE,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,QAAA;QAAAC,WAAA;QAAAC,YAAA;QAAAC,QAAA;MAAA,GACA;QAAAR,EAAA;QAAAE,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,QAAA;QAAAC,WAAA;QAAAC,YAAA;QAAAC,QAAA;MAAA,GACA;QAAAR,EAAA;QAAAE,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,QAAA;QAAAC,WAAA;QAAAC,YAAA;QAAAC,QAAA;MAAA,EACA;MACA,KAAAnB,GAAA,GAAAY,OAAA,CAAAQ,IAAA,CAAApB,GAAA,IAAAA,GAAA,CAAAW,EAAA,KAAAU,QAAA,CAAAb,KAAA;MACA,SAAAR,GAAA;QACA,KAAAA,GAAA,CAAAsB,WAAA,QAAAtB,GAAA,CAAAc,OAAA;QACA,KAAAS,qBAAA;MACA;QACA,KAAAC,QAAA,CAAAC,KAAA;MACA;IACA;IACAnB,cAAA;MACA,SAAAoB,MAAA,CAAAC,OAAA,CAAAC,UAAA;QACA,MAAAC,IAAA,QAAAH,MAAA,CAAAI,KAAA,CAAAC,IAAA,CAAAF,IAAA;QACA,KAAA5B,WAAA,GAAA4B,IAAA;QACA,KAAA3B,SAAA,GAAA2B,IAAA;MACA;IACA;IACAN,sBAAA;MACA,SAAArB,SAAA,SAAAF,GAAA;QACA,KAAAG,gBAAA,QAAAuB,MAAA,CAAAI,KAAA,CAAAC,IAAA,CAAApB,EAAA,UAAAX,GAAA,CAAAgC,SAAA;MACA;IACA;IACAC,oBAAA;MACA,KAAAT,QAAA,CAAAU,OAAA;;MAEA;MACA,SAAAjC,WAAA,SAAAD,GAAA,SAAAA,GAAA,CAAAgC,SAAA;QACA;QACA,KAAAG,MAAA,CAAAC,IAAA;UACAJ,SAAA,OAAAhC,GAAA,CAAAgC;QACA,GACAK,IAAA;UACA,KAAAb,QAAA,CAAAU,OAAA;QACA,GACAI,KAAA,CAAAb,KAAA;UACAc,OAAA,CAAAd,KAAA,aAAAA,KAAA;UACA,KAAAD,QAAA,CAAAC,KAAA;QACA;MACA;IACA;IACAe,kBAAAf,KAAA;MACA,KAAAD,QAAA,CAAAC,KAAA;MACAc,OAAA,CAAAd,KAAA,kBAAAA,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
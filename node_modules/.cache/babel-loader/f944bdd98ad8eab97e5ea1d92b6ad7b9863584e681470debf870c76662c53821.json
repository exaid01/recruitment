{"ast":null,"code":"export default {\n  name: 'HomePage',\n  data() {\n    return {\n      activeIndex: '1',\n      activeType: 'all',\n      searchKeyword: '',\n      hotJobs: [],\n      hotCompanies: []\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n    currentUser() {\n      return this.$store.getters.currentUser;\n    },\n    filteredCompanies() {\n      if (this.activeType === 'all') {\n        return this.hotCompanies;\n      } else if (this.activeType === 'internet') {\n        return this.hotCompanies.filter(company => company.industry === '互联网' || company.industry === '软件' || company.industry === '科技');\n      } else if (this.activeType === 'finance') {\n        return this.hotCompanies.filter(company => company.industry === '金融');\n      } else if (this.activeType === 'hardware') {\n        return this.hotCompanies.filter(company => company.industry === '硬件');\n      } else if (this.activeType === 'education') {\n        return this.hotCompanies.filter(company => company.industry === '教育');\n      } else if (this.activeType === 'healthcare') {\n        return this.hotCompanies.filter(company => company.industry === '医疗');\n      } else if (this.activeType === 'ecommerce') {\n        return this.hotCompanies.filter(company => company.industry === '电商');\n      } else if (this.activeType === 'media') {\n        return this.hotCompanies.filter(company => company.industry === '文化');\n      } else if (this.activeType === 'realestate') {\n        return this.hotCompanies.filter(company => company.industry === '房地产');\n      } else if (this.activeType === 'manufacturing') {\n        return this.hotCompanies.filter(company => company.industry === '制造' || company.industry === '物流' || company.industry === '餐饮' || company.industry === '零售');\n      }\n      return this.hotCompanies;\n    }\n  },\n  mounted() {\n    // 获取热门职位\n    this.$axios.get('/jobs/hot').then(response => {\n      this.hotJobs = response.data;\n    }).catch(error => {\n      console.error('获取热门职位失败:', error);\n      this.$message.error('获取热门职位失败，请重试');\n    });\n\n    // 获取热门企业\n    this.$axios.get('/companies/hot').then(response => {\n      this.hotCompanies = response.data;\n    }).catch(error => {\n      console.error('获取热门企业失败:', error);\n      this.$message.error('获取热门企业失败，请重试');\n    });\n  },\n  methods: {\n    handleTypeChange(tab) {\n      this.activeType = tab.name;\n      // 根据行业类型获取企业\n      if (tab.name !== 'all') {\n        // 获取行业列表\n        const industries = this.getIndustryNames(tab.name);\n        if (industries.length > 1) {\n          // 多行业查询\n          this.$axios.post('/companies/industries', industries).then(response => {\n            this.hotCompanies = response.data;\n          }).catch(error => {\n            console.error('获取企业失败:', error);\n            this.$message.error('获取企业失败，请重试');\n          });\n        } else {\n          // 单行业查询\n          this.$axios.get('/companies/industry', {\n            params: {\n              industry: industries[0]\n            }\n          }).then(response => {\n            this.hotCompanies = response.data;\n          }).catch(error => {\n            console.error('获取企业失败:', error);\n            this.$message.error('获取企业失败，请重试');\n          });\n        }\n      } else {\n        // 获取所有热门企业\n        this.$axios.get('/companies/hot').then(response => {\n          this.hotCompanies = response.data;\n        }).catch(error => {\n          console.error('获取热门企业失败:', error);\n          this.$message.error('获取热门企业失败，请重试');\n        });\n      }\n    },\n    getIndustryNames(type) {\n      switch (type) {\n        case 'internet':\n          return ['互联网', '软件', '科技'];\n        case 'finance':\n          return ['金融'];\n        case 'hardware':\n          return ['硬件'];\n        case 'education':\n          return ['教育'];\n        case 'healthcare':\n          return ['医疗'];\n        case 'ecommerce':\n          return ['电商'];\n        case 'media':\n          return ['文化'];\n        case 'realestate':\n          return ['房地产'];\n        case 'manufacturing':\n          return ['制造', '物流', '餐饮', '零售'];\n        default:\n          return [];\n      }\n    },\n    search() {\n      if (!this.searchKeyword.trim()) {\n        this.$message.warning('请输入搜索关键词');\n        return;\n      }\n      this.$axios.get('/search', {\n        params: {\n          keyword: this.searchKeyword\n        }\n      }).then(response => {\n        const {\n          jobs,\n          companies\n        } = response.data;\n        // 更新热门职位和企业数据\n        this.hotJobs = jobs || [];\n        this.hotCompanies = companies || [];\n        this.$message.success('搜索成功');\n      }).catch(error => {\n        console.error('搜索失败:', error);\n        this.$message.error('搜索失败，请重试');\n      });\n    },\n    handleSelect(key) {\n      switch (key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '9':\n          // 发布职位\n          this.$router.push('/company/PublishJob'); // 跳转到发布职位页面假设发布职位的路由是/post-job\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          this.$router.push('/forum');\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      // 避免重复导航到当前页面\n      if (this.$route.path !== '/') {\n        this.$router.push('/');\n      } else {\n        // 如果已经在首页，刷新页面\n        window.location.reload();\n      }\n    },\n    goToJobDetail(id) {\n      this.$router.push(`/jobs/${id}`);\n    },\n    goToCompanyDetail(id) {\n      this.$router.push(`/companies/${id}`);\n    },\n    getHotJobs() {\n      this.$axios.get('/jobs').then(response => {\n        // 模拟企业名称，实际项目中需要关联企业表\n        this.hotJobs = response.data.map(job => ({\n          ...job,\n          company: '企业名称 ' + Math.floor(Math.random() * 100)\n        }));\n      }).catch(error => {\n        console.error('获取岗位失败:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeIndex","activeType","searchKeyword","hotJobs","hotCompanies","computed","isLoggedIn","$store","getters","currentUser","filteredCompanies","filter","company","industry","mounted","$axios","get","then","response","catch","error","console","$message","methods","handleTypeChange","tab","industries","getIndustryNames","length","post","params","type","search","trim","warning","keyword","jobs","companies","success","handleSelect","key","$router","push","logout","dispatch","$route","path","window","location","reload","goToJobDetail","id","goToCompanyDetail","getHotJobs","map","job","Math","floor","random"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- 导航栏 - 固定顺序 -->\n    <el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n      <!-- 1. 首页 - 始终显示 -->\n      <el-menu-item index=\"1\">首页</el-menu-item>\n      \n      <!-- 企业用户导航项 -->\n      <template v-if=\"isLoggedIn && currentUser.role === 1\">\n        <!-- 2. 发布职位 - 仅企业用户显示 -->\n        <el-menu-item index=\"9\">发布职位</el-menu-item>\n        <!-- 3. 消息 - 企业用户显示 -->\n        <el-menu-item index=\"4\">消息</el-menu-item>\n      </template>\n      \n      <!-- 非企业用户导航项 -->\n      <template v-if=\"!isLoggedIn || currentUser.role !== 1\">\n        <!-- 2. 职位 - 非企业用户显示 -->\n        <el-menu-item index=\"2\">职位</el-menu-item>\n        <!-- 3. 企业 - 非企业用户显示 -->\n        <el-menu-item index=\"3\">企业</el-menu-item>\n        <!-- 4. 消息 - 非管理员用户显示 -->\n        <el-menu-item index=\"4\" v-if=\"isLoggedIn && currentUser.role !== 2\">消息</el-menu-item>\n        <!-- 5. 论坛 - 仅登录的普通用户显示 -->\n        <el-menu-item index=\"5\" v-if=\"isLoggedIn && currentUser.role === 0\">论坛</el-menu-item>\n      </template>\n      \n      <!-- 7. 登录 - 非登录用户显示 -->\n      <el-menu-item index=\"6\" v-if=\"!isLoggedIn\">登录</el-menu-item>\n      \n      <!-- 8. 注册 - 非登录用户显示 -->\n      <el-menu-item index=\"7\" v-if=\"!isLoggedIn\">注册</el-menu-item>\n      \n      <!-- 9. 用户下拉菜单 - 所有登录用户显示 -->\n      <el-submenu index=\"8\" v-if=\"isLoggedIn\">\n        <template slot=\"title\">{{ currentUser.username }}</template>\n        <el-menu-item index=\"8-1\">个人中心</el-menu-item>\n        <el-menu-item index=\"8-2\" v-if=\"currentUser.role === 2\">管理员面板</el-menu-item>\n        <el-menu-item index=\"8-3\" @click=\"logout\">退出登录</el-menu-item>\n      </el-submenu>\n    </el-menu>\n\n    <!-- 轮播图 -->\n    <el-carousel height=\"400px\">\n      <el-carousel-item v-for=\"item in 3\" :key=\"item\">\n        <img :src=\"`https://picsum.photos/1200/400?random=${item}`\" alt=\"轮播图\" style=\"width: 100%; height: 100%; object-fit: cover;\">\n      </el-carousel-item>\n    </el-carousel>\n\n    <!-- 搜索框 -->\n    <div class=\"search-container\" style=\"margin: 30px; text-align: center;\">\n      <el-input v-model=\"searchKeyword\" placeholder=\"搜索职位或公司\" style=\"width: 50%;\">\n        <el-button slot=\"append\" type=\"primary\" icon=\"el-icon-search\" @click=\"search\"></el-button>\n      </el-input>\n    </div>\n\n    <!-- 企业类型选择器 -->\n    <div class=\"hot-companies\">\n      <h2>企业类型选择</h2>\n      <el-tabs v-model=\"activeType\" @tab-click=\"handleTypeChange\">\n        <el-tab-pane label=\"全部企业\" name=\"all\"></el-tab-pane>\n        <el-tab-pane label=\"互联网IT\" name=\"internet\"></el-tab-pane>\n        <el-tab-pane label=\"金融管理\" name=\"finance\"></el-tab-pane>\n        <el-tab-pane label=\"硬件设备\" name=\"hardware\"></el-tab-pane>\n        <el-tab-pane label=\"教育培训\" name=\"education\"></el-tab-pane>\n        <el-tab-pane label=\"医疗健康\" name=\"healthcare\"></el-tab-pane>\n        <el-tab-pane label=\"电子商务\" name=\"ecommerce\"></el-tab-pane>\n        <el-tab-pane label=\"文化传媒\" name=\"media\"></el-tab-pane>\n        <el-tab-pane label=\"房地产\" name=\"realestate\"></el-tab-pane>\n        <el-tab-pane label=\"制造业\" name=\"manufacturing\"></el-tab-pane>\n      </el-tabs>\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n        <el-col :span=\"6\" v-for=\"company in filteredCompanies\" :key=\"company.id\">\n          <el-card class=\"company-card\">\n            <div class=\"company-info\">\n              <img :src=\"company.logo || `https://picsum.photos/200/200?random=${company.id}`\" alt=\"企业logo\" class=\"company-logo\">\n              <h3>{{ company.name }}</h3>\n              <p>{{ company.industry }}</p>\n              <p>{{ company.scale }}</p>\n            </div>\n            <el-button type=\"primary\" size=\"small\" @click=\"goToCompanyDetail(company.id)\">查看详情</el-button>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 热门岗位 -->\n    <div class=\"hot-jobs\">\n      <h3>热门岗位</h3>\n      <div class=\"job-list\">\n        <el-card class=\"job-card\" v-for=\"job in hotJobs\" :key=\"job.id\" @click=\"goToJobDetail(job.id)\">\n          <div class=\"job-info\">\n            <h4>{{ job.title }}</h4>\n            <div class=\"job-meta\">\n              <span class=\"salary\">{{ job.salary }}</span>\n              <span>{{ job.location }}</span>\n            </div>\n            <div class=\"company-name\">{{ job.company }}</div>\n          </div>\n        </el-card>\n      </div>\n    </div>\n\n    <!-- 热门企业 -->\n    <div class=\"hot-companies\">\n      <h2>热门企业</h2>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\" v-for=\"company in hotCompanies\" :key=\"company.id\">\n          <el-card class=\"company-card\">\n            <div class=\"company-info\">\n              <img :src=\"company.logo || `https://picsum.photos/200/200?random=${company.id}`\" alt=\"企业logo\" class=\"company-logo\">\n              <h3>{{ company.name }}</h3>\n              <p>{{ company.industry }}</p>\n              <p>{{ company.scale }}</p>\n            </div>\n            <el-button type=\"primary\" size=\"small\" @click=\"goToCompanyDetail(company.id)\">查看详情</el-button>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      activeIndex: '1',\n      activeType: 'all',\n      searchKeyword: '',\n      hotJobs: [],\n      hotCompanies: []\n    }\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n    currentUser() {\n      return this.$store.getters.currentUser;\n    },\n    filteredCompanies() {\n      if (this.activeType === 'all') {\n        return this.hotCompanies;\n      } else if (this.activeType === 'internet') {\n        return this.hotCompanies.filter(company => company.industry === '互联网' || company.industry === '软件' || company.industry === '科技');\n      } else if (this.activeType === 'finance') {\n        return this.hotCompanies.filter(company => company.industry === '金融');\n      } else if (this.activeType === 'hardware') {\n        return this.hotCompanies.filter(company => company.industry === '硬件');\n      } else if (this.activeType === 'education') {\n        return this.hotCompanies.filter(company => company.industry === '教育');\n      } else if (this.activeType === 'healthcare') {\n        return this.hotCompanies.filter(company => company.industry === '医疗');\n      } else if (this.activeType === 'ecommerce') {\n        return this.hotCompanies.filter(company => company.industry === '电商');\n      } else if (this.activeType === 'media') {\n        return this.hotCompanies.filter(company => company.industry === '文化');\n      } else if (this.activeType === 'realestate') {\n        return this.hotCompanies.filter(company => company.industry === '房地产');\n      } else if (this.activeType === 'manufacturing') {\n        return this.hotCompanies.filter(company => company.industry === '制造' || company.industry === '物流' || company.industry === '餐饮' || company.industry === '零售');\n      }\n      return this.hotCompanies;\n    }\n  },\n  mounted() {\n    // 获取热门职位\n    this.$axios.get('/jobs/hot')\n      .then(response => {\n        this.hotJobs = response.data;\n      })\n      .catch(error => {\n        console.error('获取热门职位失败:', error);\n        this.$message.error('获取热门职位失败，请重试');\n      });\n\n    // 获取热门企业\n    this.$axios.get('/companies/hot')\n      .then(response => {\n        this.hotCompanies = response.data;\n      })\n      .catch(error => {\n        console.error('获取热门企业失败:', error);\n        this.$message.error('获取热门企业失败，请重试');\n      });\n  },\n\n  methods: {\n    handleTypeChange(tab) {\n      this.activeType = tab.name;\n      // 根据行业类型获取企业\n      if (tab.name !== 'all') {\n        // 获取行业列表\n        const industries = this.getIndustryNames(tab.name);\n        if (industries.length > 1) {\n          // 多行业查询\n          this.$axios.post('/companies/industries', industries)\n            .then(response => {\n              this.hotCompanies = response.data;\n            })\n            .catch(error => {\n              console.error('获取企业失败:', error);\n              this.$message.error('获取企业失败，请重试');\n            });\n        } else {\n          // 单行业查询\n          this.$axios.get('/companies/industry', {\n            params: {\n              industry: industries[0]\n            }\n          })\n          .then(response => {\n            this.hotCompanies = response.data;\n          })\n          .catch(error => {\n            console.error('获取企业失败:', error);\n            this.$message.error('获取企业失败，请重试');\n          });\n        }\n      } else {\n        // 获取所有热门企业\n        this.$axios.get('/companies/hot')\n          .then(response => {\n            this.hotCompanies = response.data;\n          })\n          .catch(error => {\n            console.error('获取热门企业失败:', error);\n            this.$message.error('获取热门企业失败，请重试');\n          });\n      }\n    },\n\n    getIndustryNames(type) {\n      switch(type) {\n        case 'internet': return ['互联网', '软件', '科技'];\n        case 'finance': return ['金融'];\n        case 'hardware': return ['硬件'];\n        case 'education': return ['教育'];\n        case 'healthcare': return ['医疗'];\n        case 'ecommerce': return ['电商'];\n        case 'media': return ['文化'];\n        case 'realestate': return ['房地产'];\n        case 'manufacturing': return ['制造', '物流', '餐饮', '零售'];\n        default: return [];\n      }\n    },\n    search() {\n      if (!this.searchKeyword.trim()) {\n        this.$message.warning('请输入搜索关键词');\n        return;\n      }\n\n      this.$axios.get('/search', {\n        params: {\n          keyword: this.searchKeyword\n        }\n      })\n      .then(response => {\n        const { jobs, companies } = response.data;\n        // 更新热门职位和企业数据\n        this.hotJobs = jobs || [];\n        this.hotCompanies = companies || [];\n        this.$message.success('搜索成功');\n      })\n      .catch(error => {\n        console.error('搜索失败:', error);\n        this.$message.error('搜索失败，请重试');\n      });\n    },\n\n    handleSelect(key) {\n      switch(key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '9':  // 发布职位\n          this.$router.push('/company/PublishJob');  // 跳转到发布职位页面假设发布职位的路由是/post-job\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          this.$router.push('/forum');\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      // 避免重复导航到当前页面\n      if (this.$route.path !== '/') {\n        this.$router.push('/');\n      } else {\n        // 如果已经在首页，刷新页面\n        window.location.reload();\n      }\n    },\n    goToJobDetail(id) {\n      this.$router.push(`/jobs/${id}`);\n    },\n    goToCompanyDetail(id) {\n      this.$router.push(`/companies/${id}`);\n    },\n    getHotJobs() {\n      this.$axios.get('/jobs')\n        .then(response => {\n          // 模拟企业名称，实际项目中需要关联企业表\n          this.hotJobs = response.data.map(job => ({\n            ...job,\n            company: '企业名称 ' + Math.floor(Math.random() * 100)\n          }));\n        })\n        .catch(error => {\n          console.error('获取岗位失败:', error);\n        });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.hot-companies h2 {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.el-tabs__item {\n  font-size: 56px;\n}\n</style>\n\n<style scoped>\n.home {\n  padding-bottom: 50px;\n}\n.el-row {\n  margin: 20px 0;\n}\n.hot-jobs,\n.hot-companies {\n  margin: 50px 30px;\n}\n.job-card,\n.company-card {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.job-info,\n.company-info {\n  margin-bottom: 15px;\n}\n.company-logo {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  margin: 0 auto 15px;\n}\n\n.job-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.job-card {\n  width: 30%;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.job-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n}\n\n.job-meta {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.salary {\n  color: #ff7e00;\n  font-weight: bold;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
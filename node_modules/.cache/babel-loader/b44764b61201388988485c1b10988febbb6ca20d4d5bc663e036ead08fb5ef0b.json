{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'FixedPublishJob',\n  data() {\n    return {\n      activeIndex: '9',\n      loading: false,\n      errorMessage: '',\n      jobForm: {\n        title: '',\n        companyId: 1\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入岗位名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoggedIn'])\n  },\n  methods: {\n    handleSelect(key) {\n      this.activeIndex = key;\n      if (key === '1') {\n        this.$router.push('/');\n      } else if (key === '6') {\n        this.$router.push('/login');\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$message.success('提交成功');\n        }\n      });\n    }\n  },\n  mounted() {\n    console.log('FixedPublishJob mounted');\n    console.log('isLoggedIn:', this.isLoggedIn);\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","activeIndex","loading","errorMessage","jobForm","title","companyId","rules","required","message","trigger","computed","methods","handleSelect","key","$router","push","submitForm","formName","$refs","validate","valid","$message","success","mounted","console","log","isLoggedIn"],"sources":["src/views/company/FixedPublishJob.vue"],"sourcesContent":["<template>\n  <div class=\"publish-job-container\">\n    <!-- 顶部导航栏 -->\n    <el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n      <el-menu-item index=\"1\">首页</el-menu-item>\n      <el-menu-item index=\"9\" v-if=\"isLoggedIn\">发布职位</el-menu-item>\n      <el-menu-item index=\"6\" v-if=\"!isLoggedIn\">登录</el-menu-item>\n    </el-menu>\n\n    <div class=\"page-header\">\n      <h1>发布新职位</h1>\n    </div>\n\n    <el-card class=\"publish-job-card\">\n      <el-form ref=\"jobForm\" :model=\"jobForm\" :rules=\"rules\" label-width=\"120px\" class=\"job-form\">\n        <el-form-item label=\"岗位名称\" prop=\"title\">\n          <el-input v-model=\"jobForm.title\" placeholder=\"请输入岗位名称\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('jobForm')\">发布岗位</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'FixedPublishJob',\n  data() {\n    return {\n      activeIndex: '9',\n      loading: false,\n      errorMessage: '',\n      jobForm: {\n        title: '',\n        companyId: 1\n      },\n      rules: {\n        title: [\n          { required: true, message: '请输入岗位名称', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoggedIn'])\n  },\n  methods: {\n    handleSelect(key) {\n      this.activeIndex = key;\n      if (key === '1') {\n        this.$router.push('/');\n      } else if (key === '6') {\n        this.$router.push('/login');\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$message.success('提交成功');\n        }\n      });\n    }\n  },\n  mounted() {\n    console.log('FixedPublishJob mounted');\n    console.log('isLoggedIn:', this.isLoggedIn);\n  }\n};\n</script>\n\n<style scoped>\n.publish-job-container {\n  padding: 20px;\n}\n.page-header {\n  margin-bottom: 20px;\n}\n</style>"],"mappings":"AA2BA,SAAAA,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,OAAA;MACAC,YAAA;MACAC,OAAA;QACAC,KAAA;QACAC,SAAA;MACA;MACAC,KAAA;QACAF,KAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA;IACA,GAAAb,UAAA;EACA;EACAc,OAAA;IACAC,aAAAC,GAAA;MACA,KAAAb,WAAA,GAAAa,GAAA;MACA,IAAAA,GAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,WAAAF,GAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;IACA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA;IACAD,OAAA,CAAAC,GAAA,qBAAAC,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
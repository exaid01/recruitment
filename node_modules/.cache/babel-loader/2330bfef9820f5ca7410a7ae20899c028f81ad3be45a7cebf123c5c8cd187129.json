{"ast":null,"code":"export default {\n  name: 'PublishJob',\n  data() {\n    return {\n      activeIndex: '1',\n      loading: false,\n      errorMessage: '',\n      jobForm: {\n        title: '',\n        salary: '',\n        location: '',\n        jobType: '',\n        experience: '',\n        education: '',\n        headcount: '',\n        description: '',\n        requirements: '',\n        benefits: '',\n        tags: [],\n        status: 1,\n        companyId: ''\n      },\n      inputTag: '',\n      companyInfo: null,\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入岗位名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 50,\n          message: '岗位名称长度应在2-50个字符之间',\n          trigger: 'blur'\n        }],\n        salary: [{\n          required: true,\n          message: '请输入薪资范围',\n          trigger: 'blur'\n        }, {\n          pattern: /^[0-9]+k-[0-9]+k$/,\n          message: '薪资范围格式应为：数字k-数字k',\n          trigger: 'blur'\n        }],\n        location: [{\n          required: true,\n          message: '请输入工作地点',\n          trigger: 'blur'\n        }],\n        jobType: [{\n          required: true,\n          message: '请选择职位类型',\n          trigger: 'change'\n        }],\n        experience: [{\n          required: true,\n          message: '请选择工作经验',\n          trigger: 'change'\n        }],\n        education: [{\n          required: true,\n          message: '请选择学历要求',\n          trigger: 'change'\n        }],\n        description: [{\n          required: true,\n          message: '请输入岗位描述',\n          trigger: 'blur'\n        }, {\n          min: 10,\n          message: '岗位描述至少10个字符',\n          trigger: 'blur'\n        }],\n        requirements: [{\n          required: true,\n          message: '请输入工作要求',\n          trigger: 'blur'\n        }, {\n          min: 10,\n          message: '工作要求至少10个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n    currentUser() {\n      return this.$store.getters.currentUser;\n    }\n  },\n  methods: {\n    handleSelect(key) {\n      switch (key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '9':\n          // 发布职位\n          // 检查当前路由，避免重复导航\n          if (this.$route.path !== '/company/PublishJob') {\n            this.$router.push('/company/PublishJob');\n          }\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          this.$router.push('/forum');\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      if (this.$route.path !== '/') {\n        this.$router.push('/');\n      } else {\n        window.location.reload();\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // 准备提交数据\n          const jobData = {\n            ...this.jobForm,\n            // 确保companyId是数字类型\n            companyId: Number(this.jobForm.companyId)\n          };\n          console.log('提交的职位数据:', jobData);\n\n          // 提交表单数据\n          this.$axios.post('/jobs', jobData).then(response => {\n            console.log('发布成功响应:', response);\n            this.$message.success('岗位发布成功');\n            this.$router.push('/company/jobs');\n          }).catch(error => {\n            console.error('发布失败错误:', error);\n            this.$message.error('岗位发布失败: ' + (error.response?.data?.message || '服务器错误'));\n          });\n        } else {\n          this.$message.warning('请完善表单信息');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n      this.jobForm.tags = [];\n      this.inputTag = '';\n    },\n    handleTagAdd() {\n      if (this.inputTag && this.jobForm.tags.indexOf(this.inputTag) === -1) {\n        this.jobForm.tags.push(this.inputTag);\n      }\n      this.inputTag = '';\n    },\n    handleTagClose(tag) {\n      const index = this.jobForm.tags.indexOf(tag);\n      if (index !== -1) {\n        this.jobForm.tags.splice(index, 1);\n      }\n    },\n    getCompanyInfo() {\n      console.log('getCompanyInfo called');\n      this.loading = true;\n      console.log('Loading set to true');\n      const companyId = this.jobForm.companyId;\n      console.log('Company ID for API call:', companyId);\n      console.log('API URL:', `/companies/${companyId}`);\n      console.log('Axios base URL:', this.$axios.defaults.baseURL);\n      this.$axios.get(`/companies/${companyId}`).then(response => {\n        console.log('Company info API response:', response);\n        this.companyInfo = response.data;\n        console.log('Company info set:', this.companyInfo);\n        this.loading = false;\n        console.log('Loading set to false');\n      }).catch(error => {\n        console.error('获取公司信息失败:', error);\n        console.error('Error response:', error.response);\n        this.errorMessage = '获取公司信息失败: ' + (error.response?.data?.message || '网络错误');\n        console.log('Error message set:', this.errorMessage);\n        this.loading = false;\n        console.log('Loading set to false');\n      });\n    }\n  },\n  mounted() {\n    // 检查用户是否登录且为企业角色\n    console.log('PublishJob mounted - store.user:', this.$store.state.user);\n    console.log('PublishJob mounted - localStorage.user:', localStorage.getItem('user'));\n    console.log('PublishJob mounted - isLoggedIn:', this.$store.getters.isLoggedIn);\n    try {\n      // 暂时注释权限检查，用于测试\n      /*if (!this.$store.state.user) {\n        console.log('User not logged in');\n        this.$message.error('请先登录');\n        this.$router.push('/login');\n      } else if (this.$store.state.user.role !== 1) {\n        console.log('User role is not company:', this.$store.state.user.role);\n        this.$message.error('您没有权限访问此页面');\n        this.$router.push('/');\n      } else */\n      {\n        console.log('Bypassing auth check for testing');\n        // 模拟公司ID\n        this.jobForm.companyId = 1;\n        console.log('Company ID set to:', this.jobForm.companyId);\n        // 获取公司信息\n        this.getCompanyInfo();\n      }\n    } catch (error) {\n      console.error('Error in mounted hook:', error);\n      this.errorMessage = '页面加载失败: ' + error.message;\n      console.log('Error message set:', this.errorMessage);\n    }\n    console.log('Mounted hook completed');\n  }\n};","map":{"version":3,"names":["name","data","activeIndex","loading","errorMessage","jobForm","title","salary","location","jobType","experience","education","headcount","description","requirements","benefits","tags","status","companyId","inputTag","companyInfo","rules","required","message","trigger","min","max","pattern","computed","isLoggedIn","$store","getters","currentUser","methods","handleSelect","key","$router","push","$route","path","logout","dispatch","$message","success","window","reload","submitForm","formName","$refs","validate","valid","jobData","Number","console","log","$axios","post","then","response","catch","error","warning","resetForm","resetFields","handleTagAdd","indexOf","handleTagClose","tag","index","splice","getCompanyInfo","defaults","baseURL","get","mounted","state","user","localStorage","getItem"],"sources":["src/views/company/PublishJob.vue"],"sourcesContent":["<template>\n  <div class=\"publish-job-container\">\n    <!-- 顶部导航栏 -->\n    <el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n      <!-- 1. 首页 - 始终显示 -->\n      <el-menu-item index=\"1\">首页</el-menu-item>\n      \n      <!-- 2. 职位 - 非企业用户显示 -->\n      <el-menu-item index=\"2\" v-if=\"!isLoggedIn || currentUser.role !== 1\">职位</el-menu-item>\n      \n      <!-- 3. 企业 - 非企业用户显示 -->\n      <el-menu-item index=\"3\" v-if=\"!isLoggedIn || currentUser.role !== 1\">企业</el-menu-item>\n      \n      <!-- 4. 发布职位 - 仅企业用户显示 -->\n      <el-menu-item index=\"9\" v-if=\"isLoggedIn && currentUser.role === 1\">发布职位</el-menu-item>\n      \n      <!-- 5. 消息 - 非管理员用户显示 -->\n      <el-menu-item index=\"4\" v-if=\"isLoggedIn && currentUser.role !== 2\">消息</el-menu-item>\n      \n      <!-- 6. 论坛 - 仅登录的普通用户显示 -->\n      <el-menu-item index=\"5\" v-if=\"isLoggedIn && currentUser.role === 0\">论坛</el-menu-item>\n      \n      <!-- 7. 登录 - 非登录用户显示 -->\n      <el-menu-item index=\"6\" v-if=\"!isLoggedIn\">登录</el-menu-item>\n      \n      <!-- 8. 注册 - 非登录用户显示 -->\n      <el-menu-item index=\"7\" v-if=\"!isLoggedIn\">注册</el-menu-item>\n      \n      <!-- 9. 用户下拉菜单 - 所有登录用户显示 -->\n      <el-submenu index=\"8\" v-if=\"isLoggedIn\">\n        <template slot=\"title\">{{ currentUser.username }}</template>\n        <el-menu-item index=\"8-1\">个人中心</el-menu-item>\n        <el-menu-item index=\"8-2\" v-if=\"currentUser.role === 2\">管理员面板</el-menu-item>\n        <el-menu-item index=\"8-3\" @click=\"logout\">退出登录</el-menu-item>\n      </el-submenu>\n    </el-menu>\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"spinner\"></div>\n      <p>加载中...</p>\n    </div>\n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <el-alert :message=\"errorMessage\" type=\"error\" show-icon></el-alert>\n    </div>\n    <div class=\"page-header\">\n      <h1>发布新职位</h1>\n      <p class=\"subtitle\">填写以下信息，发布您的招聘职位</p>\n    </div>\n\n    <el-card class=\"publish-job-card\">\n      <!-- 公司信息预览 -->\n      <div class=\"company-info\" v-if=\"companyInfo\">\n        <img :src=\"companyInfo.logo || '/default-company-logo.png'\" alt=\"公司logo\" class=\"company-logo\">\n        <div class=\"company-details\">\n          <h3>{{ companyInfo.name }}</h3>\n          <p class=\"company-desc\">{{ companyInfo.industry }} | {{ companyInfo.scale }} | {{ companyInfo.location }}</p>\n        </div>\n      </div>\n\n      <el-form ref=\"jobForm\" :model=\"jobForm\" :rules=\"rules\" label-width=\"120px\" class=\"job-form\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"24\">\n            <el-form-item label=\"岗位名称\" prop=\"title\" class=\"required\">\n              <el-input v-model=\"jobForm.title\" placeholder=\"请输入岗位名称\" size=\"medium\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"薪资范围\" prop=\"salary\" class=\"required\">\n              <el-input v-model=\"jobForm.salary\" placeholder=\"请输入薪资范围，如：10k-20k\" size=\"medium\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"工作地点\" prop=\"location\" class=\"required\">\n              <el-input v-model=\"jobForm.location\" placeholder=\"请输入工作地点\" size=\"medium\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"职位类型\" prop=\"jobType\" class=\"required\">\n              <el-select v-model=\"jobForm.jobType\" placeholder=\"请选择职位类型\" size=\"medium\">\n                <el-option label=\"全职\" value=\"full-time\"></el-option>\n                <el-option label=\"兼职\" value=\"part-time\"></el-option>\n                <el-option label=\"实习\" value=\"internship\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"工作经验\" prop=\"experience\" class=\"required\">\n              <el-select v-model=\"jobForm.experience\" placeholder=\"请选择工作经验\" size=\"medium\">\n                <el-option label=\"应届毕业生\" value=\"fresh-graduate\"></el-option>\n                <el-option label=\"1年以下\" value=\"less-than-1-year\"></el-option>\n                <el-option label=\"1-3年\" value=\"1-3-years\"></el-option>\n                <el-option label=\"3-5年\" value=\"3-5-years\"></el-option>\n                <el-option label=\"5-10年\" value=\"5-10-years\"></el-option>\n                <el-option label=\"10年以上\" value=\"more-than-10-years\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"学历要求\" prop=\"education\" class=\"required\">\n              <el-select v-model=\"jobForm.education\" placeholder=\"请选择学历要求\" size=\"medium\">\n                <el-option label=\"大专\" value=\"college\"></el-option>\n                <el-option label=\"本科\" value=\"bachelor\"></el-option>\n                <el-option label=\"硕士\" value=\"master\"></el-option>\n                <el-option label=\"博士\" value=\"doctor\"></el-option>\n                <el-option label=\"不限\" value=\"no-limit\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"招聘人数\" prop=\"headcount\">\n              <el-input v-model=\"jobForm.headcount\" placeholder=\"请输入招聘人数\" size=\"medium\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"24\">\n            <el-form-item label=\"岗位描述\" prop=\"description\" class=\"required\">\n              <el-input type=\"textarea\" v-model=\"jobForm.description\" placeholder=\"请详细描述岗位职责和工作内容\" :rows=\"5\" size=\"medium\"></el-input>\n              <div class=\"form-hint\">建议包含：工作职责、团队情况、项目介绍等信息</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"24\">\n            <el-form-item label=\"工作要求\" prop=\"requirements\" class=\"required\">\n              <el-input type=\"textarea\" v-model=\"jobForm.requirements\" placeholder=\"请详细描述任职要求\" :rows=\"5\" size=\"medium\"></el-input>\n              <div class=\"form-hint\">建议包含：技能要求、经验要求、性格特质等信息</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"24\">\n            <el-form-item label=\"福利待遇\" prop=\"benefits\">\n              <el-input type=\"textarea\" v-model=\"jobForm.benefits\" placeholder=\"请输入福利待遇\" :rows=\"3\" size=\"medium\"></el-input>\n              <div class=\"form-hint\">例如：五险一金、年终奖、带薪年假、节日福利等</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"24\">\n            <el-form-item label=\"职位标签\">\n              <el-tag v-for=\"tag in jobForm.tags\" :key=\"tag\" closable @close=\"handleTagClose(tag)\">\n                {{ tag }}\n              </el-tag>\n              <el-input\n                v-model=\"inputTag\"\n                placeholder=\"输入标签，按回车添加\"\n                @keyup.enter.native=\"handleTagAdd\"\n                size=\"small\"\n                class=\"tag-input\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"24\" class=\"form-actions\">\n            <el-button type=\"primary\" @click=\"submitForm('jobForm')\" size=\"medium\">发布岗位</el-button>\n            <el-button @click=\"resetForm('jobForm')\" size=\"medium\">重置</el-button>\n            <el-button @click=\"$router.go(-1)\" size=\"medium\">取消</el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PublishJob',\n  data() {\n    return {\n      activeIndex: this.$route.path === '/company/PublishJob' ? '9' : '1',\n      loading: false,\n      errorMessage: '',\n      jobForm: {\n        title: '',\n        salary: '',\n        location: '',\n        jobType: '',\n        experience: '',\n        education: '',\n        headcount: '',\n        description: '',\n        requirements: '',\n        benefits: '',\n        tags: [],\n        status: 1,\n        companyId: ''\n      },\n      inputTag: '',\n      companyInfo: null,\n      rules: {\n        title: [\n          { required: true, message: '请输入岗位名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '岗位名称长度应在2-50个字符之间', trigger: 'blur' }\n        ],\n        salary: [\n          { required: true, message: '请输入薪资范围', trigger: 'blur' },\n          { pattern: /^[0-9]+k-[0-9]+k$/, message: '薪资范围格式应为：数字k-数字k', trigger: 'blur' }\n        ],\n        location: [\n          { required: true, message: '请输入工作地点', trigger: 'blur' }\n        ],\n        jobType: [\n          { required: true, message: '请选择职位类型', trigger: 'change' }\n        ],\n        experience: [\n          { required: true, message: '请选择工作经验', trigger: 'change' }\n        ],\n        education: [\n          { required: true, message: '请选择学历要求', trigger: 'change' }\n        ],\n        description: [\n          { required: true, message: '请输入岗位描述', trigger: 'blur' },\n          { min: 10, message: '岗位描述至少10个字符', trigger: 'blur' }\n        ],\n        requirements: [\n          { required: true, message: '请输入工作要求', trigger: 'blur' },\n          { min: 10, message: '工作要求至少10个字符', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n    currentUser() {\n      return this.$store.getters.currentUser;\n    }\n  },\n  watch: {\n    '$route'(to) {\n      this.activeIndex = to.path === '/company/PublishJob' ? '9' : '1';\n    }\n  },\n  methods: {\n    handleSelect(key) {\n      switch(key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '9':  // 发布职位\n          // 检查当前路由，避免重复导航\n          if (this.$route.path !== '/company/PublishJob') {\n            this.$router.push('/company/PublishJob');\n          }\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          this.$router.push('/forum');\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      if (this.$route.path !== '/') {\n        this.$router.push('/');\n      } else {\n        window.location.reload();\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // 准备提交数据\n          const jobData = {\n            ...this.jobForm,\n            // 确保companyId是数字类型\n            companyId: Number(this.jobForm.companyId)\n          };\n          \n          console.log('提交的职位数据:', jobData);\n          \n          // 提交表单数据\n          this.$axios.post('/jobs', jobData)\n            .then(response => {\n              console.log('发布成功响应:', response);\n              this.$message.success('岗位发布成功');\n              this.$router.push('/company/jobs');\n            })\n            .catch(error => {\n              console.error('发布失败错误:', error);\n              this.$message.error('岗位发布失败: ' + (error.response?.data?.message || '服务器错误'));\n            });\n        } else {\n          this.$message.warning('请完善表单信息');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n      this.jobForm.tags = [];\n      this.inputTag = '';\n    },\n    handleTagAdd() {\n      if (this.inputTag && this.jobForm.tags.indexOf(this.inputTag) === -1) {\n        this.jobForm.tags.push(this.inputTag);\n      }\n      this.inputTag = '';\n    },\n    handleTagClose(tag) {\n      const index = this.jobForm.tags.indexOf(tag);\n      if (index !== -1) {\n        this.jobForm.tags.splice(index, 1);\n      }\n    },\n    getCompanyInfo() {\n      console.log('getCompanyInfo called');\n      this.loading = true;\n      console.log('Loading set to true');\n      const companyId = this.jobForm.companyId;\n      console.log('Company ID for API call:', companyId);\n      console.log('API URL:', `/companies/${companyId}`);\n      console.log('Axios base URL:', this.$axios.defaults.baseURL);\n      this.$axios.get(`/companies/${companyId}`)\n        .then(response => {\n          console.log('Company info API response:', response);\n          this.companyInfo = response.data;\n          console.log('Company info set:', this.companyInfo);\n          this.loading = false;\n          console.log('Loading set to false');\n        })\n        .catch(error => {\n          console.error('获取公司信息失败:', error);\n          console.error('Error response:', error.response);\n          this.errorMessage = '获取公司信息失败: ' + (error.response?.data?.message || '网络错误');\n          console.log('Error message set:', this.errorMessage);\n          this.loading = false;\n          console.log('Loading set to false');\n        });\n    }\n  },\n  mounted() {\n    // 检查用户是否登录且为企业角色\n    console.log('PublishJob mounted - store.user:', this.$store.state.user);\n    console.log('PublishJob mounted - localStorage.user:', localStorage.getItem('user'));\n    console.log('PublishJob mounted - isLoggedIn:', this.$store.getters.isLoggedIn);\n    \n    try {\n      // 暂时注释权限检查，用于测试\n      /*if (!this.$store.state.user) {\n        console.log('User not logged in');\n        this.$message.error('请先登录');\n        this.$router.push('/login');\n      } else if (this.$store.state.user.role !== 1) {\n        console.log('User role is not company:', this.$store.state.user.role);\n        this.$message.error('您没有权限访问此页面');\n        this.$router.push('/');\n      } else */{\n        console.log('Bypassing auth check for testing');\n        // 模拟公司ID\n        this.jobForm.companyId = 1;\n        console.log('Company ID set to:', this.jobForm.companyId);\n        // 获取公司信息\n        this.getCompanyInfo();\n      }\n    } catch (error) {\n      console.error('Error in mounted hook:', error);\n      this.errorMessage = '页面加载失败: ' + error.message;\n      console.log('Error message set:', this.errorMessage);\n    }\n    console.log('Mounted hook completed');\n  }\n};\n</script>\n\n<style scoped>\n.publish-job-container {\n  position: relative;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.8);\n  z-index: 1000;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #1890ff;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.error-message {\n  margin-bottom: 20px;\n}\n\n.publish-job-container {\n  padding-bottom: 50px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n}\n\n.page-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.page-header h1 {\n  font-size: 28px;\n  color: #333;\n  margin-bottom: 10px;\n}\n\n.page-header .subtitle {\n  color: #666;\n  font-size: 16px;\n}\n\n.publish-job-card {\n  max-width: 1000px;\n  margin: 0 auto;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.company-info {\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid #f0f0f0;\n  margin-bottom: 20px;\n}\n\n.company-logo {\n  width: 80px;\n  height: 80px;\n  border-radius: 4px;\n  object-fit: cover;\n  margin-right: 20px;\n}\n\n.company-details h3 {\n  margin: 0 0 5px 0;\n  font-size: 18px;\n  color: #333;\n}\n\n.company-desc {\n  color: #666;\n  font-size: 14px;\n}\n\n.job-form {\n  padding: 0 20px 20px 20px;\n}\n\n.required .el-form-item__label::before {\n  content: '*';\n  color: #f56c6c;\n  margin-right: 4px;\n}\n\n.form-hint {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.tag-input {\n  width: 160px;\n  display: inline-block;\n  margin-left: 10px;\n}\n\n.el-tag {\n  margin-right: 10px;\n}\n\n.form-actions {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.form-actions .el-button {\n  margin: 0 10px;\n}\n\n/* 响应式调整 */\n@media screen and (max-width: 768px) {\n  .el-col {\n    width: 100% !important;\n  }\n\n  .company-info {\n    flex-direction: column;\n    text-align: center;\n  }\n\n  .company-logo {\n    margin-right: 0;\n    margin-bottom: 15px;\n  }\n}\n</style>\n\n<script>\nexport default {\n  name: 'PublishJob',\n  data() {\n    return {\n      activeIndex: '1',\n      loading: false,\n      errorMessage: '',\n      jobForm: {\n        title: '',\n        salary: '',\n        location: '',\n        jobType: '',\n        experience: '',\n        education: '',\n        headcount: '',\n        description: '',\n        requirements: '',\n        benefits: '',\n        tags: [],\n        status: 1,\n        companyId: ''\n      },\n      inputTag: '',\n      companyInfo: null,\n      rules: {\n        title: [\n          { required: true, message: '请输入岗位名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '岗位名称长度应在2-50个字符之间', trigger: 'blur' }\n        ],\n        salary: [\n          { required: true, message: '请输入薪资范围', trigger: 'blur' },\n          { pattern: /^[0-9]+k-[0-9]+k$/, message: '薪资范围格式应为：数字k-数字k', trigger: 'blur' }\n        ],\n        location: [\n          { required: true, message: '请输入工作地点', trigger: 'blur' }\n        ],\n        jobType: [\n          { required: true, message: '请选择职位类型', trigger: 'change' }\n        ],\n        experience: [\n          { required: true, message: '请选择工作经验', trigger: 'change' }\n        ],\n        education: [\n          { required: true, message: '请选择学历要求', trigger: 'change' }\n        ],\n        description: [\n          { required: true, message: '请输入岗位描述', trigger: 'blur' },\n          { min: 10, message: '岗位描述至少10个字符', trigger: 'blur' }\n        ],\n        requirements: [\n          { required: true, message: '请输入工作要求', trigger: 'blur' },\n          { min: 10, message: '工作要求至少10个字符', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    },\n    currentUser() {\n      return this.$store.getters.currentUser;\n    }\n  },\n  methods: {\n    handleSelect(key) {\n      switch(key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '9':  // 发布职位\n          // 检查当前路由，避免重复导航\n          if (this.$route.path !== '/company/PublishJob') {\n            this.$router.push('/company/PublishJob');\n          }\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          this.$router.push('/forum');\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      if (this.$route.path !== '/') {\n        this.$router.push('/');\n      } else {\n        window.location.reload();\n      }\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // 准备提交数据\n          const jobData = {\n            ...this.jobForm,\n            // 确保companyId是数字类型\n            companyId: Number(this.jobForm.companyId)\n          };\n          \n          console.log('提交的职位数据:', jobData);\n          \n          // 提交表单数据\n          this.$axios.post('/jobs', jobData)\n            .then(response => {\n              console.log('发布成功响应:', response);\n              this.$message.success('岗位发布成功');\n              this.$router.push('/company/jobs');\n            })\n            .catch(error => {\n              console.error('发布失败错误:', error);\n              this.$message.error('岗位发布失败: ' + (error.response?.data?.message || '服务器错误'));\n            });\n        } else {\n          this.$message.warning('请完善表单信息');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n      this.jobForm.tags = [];\n      this.inputTag = '';\n    },\n    handleTagAdd() {\n      if (this.inputTag && this.jobForm.tags.indexOf(this.inputTag) === -1) {\n        this.jobForm.tags.push(this.inputTag);\n      }\n      this.inputTag = '';\n    },\n    handleTagClose(tag) {\n      const index = this.jobForm.tags.indexOf(tag);\n      if (index !== -1) {\n        this.jobForm.tags.splice(index, 1);\n      }\n    },\n    getCompanyInfo() {\n      console.log('getCompanyInfo called');\n      this.loading = true;\n      console.log('Loading set to true');\n      const companyId = this.jobForm.companyId;\n      console.log('Company ID for API call:', companyId);\n      console.log('API URL:', `/companies/${companyId}`);\n      console.log('Axios base URL:', this.$axios.defaults.baseURL);\n      this.$axios.get(`/companies/${companyId}`)\n        .then(response => {\n          console.log('Company info API response:', response);\n          this.companyInfo = response.data;\n          console.log('Company info set:', this.companyInfo);\n          this.loading = false;\n          console.log('Loading set to false');\n        })\n        .catch(error => {\n          console.error('获取公司信息失败:', error);\n          console.error('Error response:', error.response);\n          this.errorMessage = '获取公司信息失败: ' + (error.response?.data?.message || '网络错误');\n          console.log('Error message set:', this.errorMessage);\n          this.loading = false;\n          console.log('Loading set to false');\n        });\n    }\n  },\n  mounted() {\n    // 检查用户是否登录且为企业角色\n    console.log('PublishJob mounted - store.user:', this.$store.state.user);\n    console.log('PublishJob mounted - localStorage.user:', localStorage.getItem('user'));\n    console.log('PublishJob mounted - isLoggedIn:', this.$store.getters.isLoggedIn);\n    \n    try {\n      // 暂时注释权限检查，用于测试\n      /*if (!this.$store.state.user) {\n        console.log('User not logged in');\n        this.$message.error('请先登录');\n        this.$router.push('/login');\n      } else if (this.$store.state.user.role !== 1) {\n        console.log('User role is not company:', this.$store.state.user.role);\n        this.$message.error('您没有权限访问此页面');\n        this.$router.push('/');\n      } else */{\n        console.log('Bypassing auth check for testing');\n        // 模拟公司ID\n        this.jobForm.companyId = 1;\n        console.log('Company ID set to:', this.jobForm.companyId);\n        // 获取公司信息\n        this.getCompanyInfo();\n      }\n    } catch (error) {\n      console.error('Error in mounted hook:', error);\n      this.errorMessage = '页面加载失败: ' + error.message;\n      console.log('Error message set:', this.errorMessage);\n    }\n    console.log('Mounted hook completed');\n  }\n};\n</script>\n\n<style scoped>\n.publish-job-container {\n  position: relative;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.8);\n  z-index: 1000;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #1890ff;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.error-message {\n  margin-bottom: 20px;\n}\n\n.publish-job-container {\n  padding-bottom: 50px;\n  background-color: #f5f7fa;\n  min-height: 100vh;\n}\n\n.page-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.page-header h1 {\n  font-size: 28px;\n  color: #333;\n  margin-bottom: 10px;\n}\n\n.page-header .subtitle {\n  color: #666;\n  font-size: 16px;\n}\n\n.publish-job-card {\n  max-width: 1000px;\n  margin: 0 auto;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.company-info {\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid #f0f0f0;\n  margin-bottom: 20px;\n}\n\n.company-logo {\n  width: 80px;\n  height: 80px;\n  border-radius: 4px;\n  object-fit: cover;\n  margin-right: 20px;\n}\n\n.company-details h3 {\n  margin: 0 0 5px 0;\n  font-size: 18px;\n  color: #333;\n}\n\n.company-desc {\n  color: #666;\n  font-size: 14px;\n}\n\n.job-form {\n  padding: 0 20px 20px 20px;\n}\n\n.required .el-form-item__label::before {\n  content: '*';\n  color: #f56c6c;\n  margin-right: 4px;\n}\n\n.form-hint {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.tag-input {\n  width: 160px;\n  display: inline-block;\n  margin-left: 10px;\n}\n\n.el-tag {\n  margin-right: 10px;\n}\n\n.form-actions {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.form-actions .el-button {\n  margin: 0 10px;\n}\n\n/* 响应式调整 */\n@media screen and (max-width: 768px) {\n  .el-col {\n    width: 100% !important;\n  }\n\n  .company-info {\n    flex-direction: column;\n    text-align: center;\n  }\n\n  .company-logo {\n    margin-right: 0;\n    margin-bottom: 15px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
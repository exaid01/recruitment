{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Register from '../views/Register.vue';\nimport UserProfile from '../views/UserProfile.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/chat',\n  name: 'ChatRoom',\n  component: () => import('../views/ChatRoom.vue')\n}, {\n  path: '/forum',\n  name: 'Forum',\n  component: () => import('../views/Forum.vue')\n}, {\n  path: '/companies',\n  name: 'Companies',\n  component: () => import('../views/Companies.vue')\n}, {\n  path: '/jobs',\n  name: 'Jobs',\n  component: () => import('../views/Jobs.vue')\n}, {\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/user',\n  name: 'UserProfile',\n  component: UserProfile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/companies/:id',\n  name: 'CompanyDetail',\n  component: () => import('../views/CompanyDetail.vue')\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue')\n}, {\n  path: '/jobs/:id',\n  name: 'JobDetail',\n  component: () => import('../views/JobDetail.vue')\n}, {\n  path: '/company/PublishJob',\n  name: 'PublishJob',\n  component: () => import('../views/company/PublishJob.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCompany: true\n  }\n}, {\n  path: '/company/jobs',\n  name: 'CompanyJobs',\n  component: () => import('../views/company/CompanyJobs.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCompany: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/terms',\n  name: 'Terms',\n  component: () => import('../views/Terms.vue')\n}, {\n  path: '/privacy',\n  name: 'Privacy',\n  component: () => import('../views/Privacy.vue')\n}, {\n  path: '/admin',\n  name: 'AdminDashboard',\n  component: () => import('../views/admin/AdminDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // 没有登录，重定向到登录页\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n\n        // 检查是否是管理员\n        if (to.matched.some(record => record.meta.requiresAdmin)) {\n          if (user && user.role === 2) {\n            next();\n          } else {\n            // 非管理员，重定向到首页并提示\n            alert('您没有管理员权限');\n            next('/');\n          }\n        } else if (to.matched.some(record => record.meta.requiresCompany)) {\n          if (user && user.role === 1) {\n            next();\n          } else {\n            // 非企业用户，重定向到职位列表页并提示\n            alert('您没有企业权限，无法访问该页面');\n            next('/jobs');\n          }\n        } else {\n          // 普通认证页面，直接放行\n          next();\n        }\n      } catch (e) {\n        console.error('解析用户信息失败:', e);\n        next('/login');\n      }\n    }\n  } else {\n    // 不需要认证的页面，直接放行\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Home","Register","UserProfile","use","routes","path","name","component","meta","requiresAuth","requiresCompany","requiresAdmin","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","token","localStorage","getItem","query","redirect","fullPath","user","JSON","parse","role","alert","e","console","error"],"sources":["D:/xiangmu/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Register from '../views/Register.vue'\nimport UserProfile from '../views/UserProfile.vue'\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/chat',\n    name: 'ChatRoom',\n    component: () => import('../views/ChatRoom.vue')\n  },\n  {\n    path: '/forum',\n    name: 'Forum',\n    component: () => import('../views/Forum.vue')\n  },\n  {\n    path: '/companies',\n    name: 'Companies',\n    component: () => import('../views/Companies.vue')\n  },\n  {\n    path: '/jobs',\n    name: 'Jobs',\n    component: () => import('../views/Jobs.vue')\n  },\n  { path: '/', name: 'Home', component: Home },\n  { path: '/user', name: 'UserProfile', component: UserProfile, meta: { requiresAuth: true } },\n  {\n    path: '/companies/:id',\n    name: 'CompanyDetail',\n    component: () => import('../views/CompanyDetail.vue')\n  },\n  {\n      path: '/login',\n      name: 'Login',\n      component: () => import('../views/Login.vue')\n    },\n    {\n      path: '/jobs/:id',\n      name: 'JobDetail',\n      component: () => import('../views/JobDetail.vue')\n    },\n    {\n      path: '/company/PublishJob',\n      name: 'PublishJob',\n      component: () => import('../views/company/PublishJob.vue'),\n      meta: {\n        requiresAuth: true,\n        requiresCompany: true\n      }\n    },\n    {\n      path: '/company/jobs',\n      name: 'CompanyJobs',\n      component: () => import('../views/company/CompanyJobs.vue'),\n      meta: {\n        requiresAuth: true,\n        requiresCompany: true\n      }\n    },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register\n  },\n  {\n    path: '/terms',\n    name: 'Terms',\n    component: () => import('../views/Terms.vue')\n  },\n  {\n    path: '/privacy',\n    name: 'Privacy',\n    component: () => import('../views/Privacy.vue')\n  },\n\n  {\n      path: '/admin',\n      name: 'AdminDashboard',\n      component: () => import('../views/admin/AdminDashboard.vue'),\n      meta: {\n        requiresAuth: true,\n        requiresAdmin: true\n      }\n    }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // 没有登录，重定向到登录页\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      });\n    } else {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        \n        // 检查是否是管理员\n        if (to.matched.some(record => record.meta.requiresAdmin)) {\n          if (user && user.role === 2) {\n            next();\n          } else {\n            // 非管理员，重定向到首页并提示\n            alert('您没有管理员权限');\n            next('/');\n          }\n        } else if (to.matched.some(record => record.meta.requiresCompany)) {\n          if (user && user.role === 1) {\n            next();\n          } else {\n            // 非企业用户，重定向到职位列表页并提示\n            alert('您没有企业权限，无法访问该页面');\n            next('/jobs');\n          }\n        } else {\n          // 普通认证页面，直接放行\n          next();\n        }\n      } catch (e) {\n        console.error('解析用户信息失败:', e);\n        next('/login');\n      }\n    }\n  } else {\n    // 不需要认证的页面，直接放行\n    next();\n  }\n})\n\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
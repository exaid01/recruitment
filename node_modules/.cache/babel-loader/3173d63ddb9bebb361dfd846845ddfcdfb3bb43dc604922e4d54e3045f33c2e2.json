{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      activeTab: 'userManagement',\n      users: [],\n      dynamics: [],\n      comments: []\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.loadUsers();\n    this.loadDynamics();\n    this.loadComments();\n  },\n  methods: {\n    goToFrontend() {\n      this.$router.push('/');\n    },\n    checkAdminRole() {\n      if (!this.$store.state.user || this.$store.state.user.role !== 2) {\n        this.$message.error('您没有权限访问管理后台');\n        this.$router.push('/');\n      }\n    },\n    loadUsers() {\n      // 调用后端接口获取用户数据\n      axios.get('/admin/users').then(response => {\n        this.users = response.data;\n      }).catch(error => {\n        this.$message.error('获取用户数据失败: ' + error.message);\n        console.error('Failed to load users:', error);\n      });\n    },\n    loadDynamics() {\n      // 调用后端接口获取待审核动态\n      axios.get('/admin/dynamics').then(response => {\n        this.dynamics = response.data;\n      }).catch(error => {\n        this.$message.error('获取动态数据失败: ' + error.message);\n        console.error('Failed to load dynamics:', error);\n      });\n    },\n    loadComments() {\n      // 调用后端接口获取待审核评论\n      axios.get('/admin/comments').then(response => {\n        this.comments = response.data;\n      }).catch(error => {\n        this.$message.error('获取评论数据失败: ' + error.message);\n        console.error('Failed to load comments:', error);\n      });\n    },\n    toggleUserStatus(user) {\n      const newStatus = user.status === 1 ? 0 : 1;\n      // 调用后端接口切换用户状态\n      axios.put(`/admin/users/${user.id}/status?status=${newStatus}`).then(() => {\n        user.status = newStatus;\n        this.$message.success(`用户${newStatus === 1 ? '启用' : '禁用'}成功`);\n      }).catch(error => {\n        this.$message.error(`用户${newStatus === 1 ? '启用' : '禁用'}失败: ` + error.message);\n        console.error('Failed to toggle user status:', error);\n      });\n    },\n    approveDynamic(dynamic) {\n      // 调用后端接口审核通过动态\n      axios.put(`/admin/dynamics/${dynamic.id}/status?status=1`).then(() => {\n        dynamic.status = 1;\n        this.$message.success('动态审核通过');\n      }).catch(error => {\n        this.$message.error('动态审核失败: ' + error.message);\n        console.error('Failed to approve dynamic:', error);\n      });\n    },\n    rejectDynamic(dynamic) {\n      // 调用后端接口拒绝动态\n      axios.put(`/admin/dynamics/${dynamic.id}/status?status=2`).then(() => {\n        dynamic.status = 2;\n        this.$message.success('动态已拒绝');\n      }).catch(error => {\n        this.$message.error('动态拒绝失败: ' + error.message);\n        console.error('Failed to reject dynamic:', error);\n      });\n    },\n    approveComment(comment) {\n      // 调用后端接口审核通过评论\n      axios.put(`/admin/comments/${comment.id}/status?status=1`).then(() => {\n        comment.status = 1;\n        this.$message.success('评论审核通过');\n      }).catch(error => {\n        this.$message.error('评论审核失败: ' + error.message);\n        console.error('Failed to approve comment:', error);\n      });\n    },\n    rejectComment(comment) {\n      // 调用后端接口拒绝评论\n      axios.put(`/admin/comments/${comment.id}/status?status=2`).then(() => {\n        comment.status = 2;\n        this.$message.success('评论已拒绝');\n      }).catch(error => {\n        this.$message.error('评论拒绝失败: ' + error.message);\n        console.error('Failed to reject comment:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","activeTab","users","dynamics","comments","created","checkAdminRole","loadUsers","loadDynamics","loadComments","methods","goToFrontend","$router","push","$store","state","user","role","$message","error","get","then","response","catch","message","console","toggleUserStatus","newStatus","status","put","id","success","approveDynamic","dynamic","rejectDynamic","approveComment","comment","rejectComment"],"sources":["src/views/admin/AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-container\">\n    <el-container>\n      <el-header style=\"display: flex; justify-content: space-between; align-items: center;\">\n  <span>招聘网站管理后台</span>\n  <el-button type=\"primary\" @click=\"goToFrontend\">返回前台</el-button>\n</el-header>\n      <el-container>\n        <el-aside width=\"200px\">\n          <el-menu :default-openeds=\"['1', '2']\">\n            <el-submenu index=\"1\">\n              <template slot=\"title\"><i class=\"el-icon-user\"></i>用户管理</template>\n              <el-menu-item index=\"1-1\" @click=\"activeTab = 'userManagement'\">用户列表</el-menu-item>\n            </el-submenu>\n            <el-submenu index=\"2\">\n              <template slot=\"title\"><i class=\"el-icon-edit\"></i>内容审核</template>\n              <el-menu-item index=\"2-1\" @click=\"activeTab = 'dynamicReview'\">动态审核</el-menu-item>\n              <el-menu-item index=\"2-2\" @click=\"activeTab = 'commentReview'\">评论审核</el-menu-item>\n            </el-submenu>\n          </el-menu>\n        </el-aside>\n        <el-main>\n          <div v-if=\"activeTab === 'userManagement'\">\n            <h3>用户管理</h3>\n            <el-table :data=\"users\" style=\"width: 100%\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"username\" label=\"用户名\" width=\"180\"></el-table-column>\n              <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\"></el-table-column>\n              <el-table-column prop=\"role\" label=\"角色\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.role === 0\">求职者</span>\n                  <span v-if=\"scope.row.role === 1\">企业</span>\n                  <span v-if=\"scope.row.role === 2\">管理员</span>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.status === 1\" style=\"color: green\">正常</span>\n                  <span v-if=\"scope.row.status === 0\" style=\"color: red\">禁用</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"150\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"toggleUserStatus(scope.row)\">\n                    {{ scope.row.status === 1 ? '禁用' : '启用' }}\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n\n          <div v-if=\"activeTab === 'dynamicReview'\">\n            <h3>动态审核</h3>\n            <!-- 动态审核内容 -->\n            <el-table :data=\"dynamics\" style=\"width: 100%\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"userId\" label=\"用户ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"content\" label=\"内容\" width=\"300\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.status === 0\" style=\"color: orange\">待审核</span>\n                  <span v-if=\"scope.row.status === 1\" style=\"color: green\">已通过</span>\n                  <span v-if=\"scope.row.status === 2\" style=\"color: red\">已拒绝</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"200\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"approveDynamic(scope.row)\">通过</el-button>\n                  <el-button type=\"danger\" size=\"small\" @click=\"rejectDynamic(scope.row)\">拒绝</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n\n          <div v-if=\"activeTab === 'commentReview'\">\n            <h3>评论审核</h3>\n            <!-- 评论审核内容 -->\n            <el-table :data=\"comments\" style=\"width: 100%\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"userId\" label=\"用户ID\" width=\"80\"></el-table-column>\n              <el-table-column prop=\"content\" label=\"内容\" width=\"300\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.status === 0\" style=\"color: orange\">待审核</span>\n                  <span v-if=\"scope.row.status === 1\" style=\"color: green\">已通过</span>\n                  <span v-if=\"scope.row.status === 2\" style=\"color: red\">已拒绝</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"200\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"primary\" size=\"small\" @click=\"approveComment(scope.row)\">通过</el-button>\n                  <el-button type=\"danger\" size=\"small\" @click=\"rejectComment(scope.row)\">拒绝</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      activeTab: 'userManagement',\n      users: [],\n      dynamics: [],\n      comments: []\n    };\n  },\n  created() {\n    this.checkAdminRole();\n    this.loadUsers();\n    this.loadDynamics();\n    this.loadComments();\n  },\n  methods: {\n    goToFrontend() {\n      this.$router.push('/');\n    },\n\n    checkAdminRole() {\n      if (!this.$store.state.user || this.$store.state.user.role !== 2) {\n        this.$message.error('您没有权限访问管理后台');\n        this.$router.push('/');\n      }\n    },\n    loadUsers() {\n      // 调用后端接口获取用户数据\n      axios.get('/admin/users')\n        .then(response => {\n          this.users = response.data;\n        })\n        .catch(error => {\n          this.$message.error('获取用户数据失败: ' + error.message);\n          console.error('Failed to load users:', error);\n        });\n    },\n    loadDynamics() {\n      // 调用后端接口获取待审核动态\n      axios.get('/admin/dynamics')\n        .then(response => {\n          this.dynamics = response.data;\n        })\n        .catch(error => {\n          this.$message.error('获取动态数据失败: ' + error.message);\n          console.error('Failed to load dynamics:', error);\n        });\n    },\n    loadComments() {\n      // 调用后端接口获取待审核评论\n      axios.get('/admin/comments')\n        .then(response => {\n          this.comments = response.data;\n        })\n        .catch(error => {\n          this.$message.error('获取评论数据失败: ' + error.message);\n          console.error('Failed to load comments:', error);\n        });\n    },\n    toggleUserStatus(user) {\n      const newStatus = user.status === 1 ? 0 : 1;\n      // 调用后端接口切换用户状态\n      axios.put(`/admin/users/${user.id}/status?status=${newStatus}`)\n        .then(() => {\n          user.status = newStatus;\n          this.$message.success(`用户${newStatus === 1 ? '启用' : '禁用'}成功`);\n        })\n        .catch(error => {\n          this.$message.error(`用户${newStatus === 1 ? '启用' : '禁用'}失败: ` + error.message);\n          console.error('Failed to toggle user status:', error);\n        });\n    },\n    approveDynamic(dynamic) {\n      // 调用后端接口审核通过动态\n      axios.put(`/admin/dynamics/${dynamic.id}/status?status=1`)\n        .then(() => {\n          dynamic.status = 1;\n          this.$message.success('动态审核通过');\n        })\n        .catch(error => {\n          this.$message.error('动态审核失败: ' + error.message);\n          console.error('Failed to approve dynamic:', error);\n        });\n    },\n    rejectDynamic(dynamic) {\n      // 调用后端接口拒绝动态\n      axios.put(`/admin/dynamics/${dynamic.id}/status?status=2`)\n        .then(() => {\n          dynamic.status = 2;\n          this.$message.success('动态已拒绝');\n        })\n        .catch(error => {\n          this.$message.error('动态拒绝失败: ' + error.message);\n          console.error('Failed to reject dynamic:', error);\n        });\n    },\n    approveComment(comment) {\n      // 调用后端接口审核通过评论\n      axios.put(`/admin/comments/${comment.id}/status?status=1`)\n        .then(() => {\n          comment.status = 1;\n          this.$message.success('评论审核通过');\n        })\n        .catch(error => {\n          this.$message.error('评论审核失败: ' + error.message);\n          console.error('Failed to approve comment:', error);\n        });\n    },\n    rejectComment(comment) {\n      // 调用后端接口拒绝评论\n      axios.put(`/admin/comments/${comment.id}/status?status=2`)\n        .then(() => {\n          comment.status = 2;\n          this.$message.success('评论已拒绝');\n        })\n        .catch(error => {\n          this.$message.error('评论拒绝失败: ' + error.message);\n          console.error('Failed to reject comment:', error);\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.admin-container {\n  height: 100vh;\n}\n.el-header {\n  background-color: #1890ff;\n  color: #fff;\n  font-size: 20px;\n  line-height: 60px;\n  text-align: center;\n}\n.el-aside {\n  background-color: #5d7fa5;\n}\n.el-menu {\n  background-color: #5d7fa5;\n  color: #ecf0f1;\n}\n.el-submenu__title {\n  color: #fff;\n}\n.el-menu-item {\n  color: #bdc3c7;\n}\n.el-menu-item:hover {\n  background-color: #3498db;\n  color: #fff;\n}\n.el-menu-item.is-active {\n  background-color: #3498db;\n  color: #fff;\n}\n.el-main {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default {\n  name: 'ForumPage',\n  data() {\n    return {\n      activeIndex: '5',\n      postContent: '',\n      commentContent: {},\n      posts: []\n    };\n  },\n  mounted() {\n    // 组件挂载时加载最新动态\n    this.loadPosts();\n  },\n  methods: {\n    // 加载最新动态\n    loadPosts() {\n      this.$axios.get('/api/forum/posts').then(response => {\n        this.posts = response.data;\n      }).catch(error => {\n        console.error('加载动态失败:', error);\n        this.$message.error('加载动态失败，请稍后重试');\n      });\n    },\n    createPost() {\n      if (!this.postContent.trim()) {\n        this.$message.warning('内容不能为空');\n        return;\n      }\n      this.$axios.post('/api/forum/posts', {\n        content: this.postContent\n      }).then(response => {\n        // 发布成功后刷新动态列表\n        this.loadPosts();\n        this.postContent = '';\n        this.$message.success('发布成功');\n      }).catch(error => {\n        console.error('发布动态失败:', error);\n        this.$message.error('发布动态失败，请稍后重试');\n      });\n    }\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn || true; // 模拟登录状态\n    },\n    currentUser() {\n      return this.$store.getters.currentUser || {\n        username: '当前用户',\n        role: 1\n      }; // 模拟用户数据\n    }\n  },\n  methods: {\n    handleSelect(key) {\n      switch (key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          if (this.$route.path !== '/forum') {\n            this.$router.push('/forum');\n          }\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      this.$router.push('/');\n    },\n    createPost() {\n      if (!this.postContent.trim()) {\n        this.$message.warning('内容不能为空');\n        return;\n      }\n      const newPost = {\n        id: this.posts.length + 1,\n        username: this.currentUser.username,\n        userAvatar: `https://picsum.photos/200/200?random=${Math.floor(Math.random() * 100)}`,\n        content: this.postContent,\n        time: '刚刚',\n        likesCount: 0,\n        liked: false,\n        showComments: false,\n        comments: []\n      };\n      this.posts.unshift(newPost);\n      this.postContent = '';\n      this.$message.success('发布成功');\n    },\n    toggleLike(postId) {\n      const post = this.posts.find(p => p.id === postId);\n      if (post) {\n        if (post.liked) {\n          post.likesCount--;\n        } else {\n          post.likesCount++;\n        }\n        post.liked = !post.liked;\n      }\n    },\n    toggleComment(postId) {\n      const post = this.posts.find(p => p.id === postId);\n      if (post) {\n        post.showComments = !post.showComments;\n        // 初始化评论输入框\n        if (!this.commentContent[postId]) {\n          this.commentContent[postId] = '';\n        }\n      }\n    },\n    addComment(postId) {\n      const content = this.commentContent[postId];\n      if (!content.trim()) {\n        this.$message.warning('评论内容不能为空');\n        return;\n      }\n      const post = this.posts.find(p => p.id === postId);\n      if (post) {\n        const newComment = {\n          id: post.comments.length + 1,\n          username: this.currentUser.username,\n          userAvatar: `https://picsum.photos/200/200?random=${Math.floor(Math.random() * 100)}`,\n          content: content,\n          time: '刚刚'\n        };\n        post.comments.push(newComment);\n        this.commentContent[postId] = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","activeIndex","postContent","commentContent","posts","mounted","loadPosts","methods","$axios","get","then","response","catch","error","console","$message","createPost","trim","warning","post","content","success","computed","isLoggedIn","$store","getters","currentUser","username","role","handleSelect","key","$router","push","$route","path","logout","dispatch","newPost","id","length","userAvatar","Math","floor","random","time","likesCount","liked","showComments","comments","unshift","toggleLike","postId","find","p","toggleComment","addComment","newComment"],"sources":["src/views/Forum.vue"],"sourcesContent":["<template>\n  <div class=\"forum-container\">\n    <!-- 导航栏 -->\n    <el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n      <el-menu-item index=\"1\">首页</el-menu-item>\n      <el-menu-item index=\"2\">职位</el-menu-item>\n      <el-menu-item index=\"3\">企业</el-menu-item>\n      <el-menu-item index=\"4\">消息</el-menu-item>\n      <el-menu-item index=\"5\">论坛</el-menu-item>\n      <el-menu-item index=\"6\" v-if=\"!isLoggedIn\">登录</el-menu-item>\n      <el-menu-item index=\"7\" v-if=\"!isLoggedIn\">注册</el-menu-item>\n      <el-submenu index=\"8\" v-if=\"isLoggedIn\">\n        <template slot=\"title\">{{ currentUser.username }}</template>\n        <el-menu-item index=\"8-1\">个人中心</el-menu-item>\n        <el-menu-item index=\"8-2\" v-if=\"currentUser.role === 2\">管理员面板</el-menu-item>\n        <el-menu-item index=\"8-3\" @click=\"logout\">退出登录</el-menu-item>\n      </el-submenu>\n    </el-menu>\n\n    <div class=\"forum-content\">\n      <!-- 发布动态区域 -->\n      <div class=\"post-create\">\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <span>发布动态</span>\n          </div>\n          <div class=\"post-form\">\n            <el-input\n              v-model=\"postContent\"\n              type=\"textarea\"\n              placeholder=\"分享你的求职经验、面试技巧或职场感悟...\"\n              :rows=\"4\"\n            ></el-input>\n            <div class=\"post-actions\">\n              <el-button type=\"primary\" @click=\"createPost\">发布</el-button>\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 动态列表 -->\n      <div class=\"posts-list\">\n        <h3>最新动态</h3>\n        <el-card v-for=\"post in posts\" :key=\"post.id\" class=\"post-card\">\n          <div class=\"post-header\">\n            <img :src=\"post.userAvatar\" alt=\"用户头像\" class=\"user-avatar\">\n            <div class=\"user-info\">\n              <div class=\"username\">{{ post.username }}</div>\n              <div class=\"post-time\">{{ post.time }}</div>\n            </div>\n          </div>\n          <div class=\"post-content\">\n            {{ post.content }}\n          </div>\n          <div class=\"post-actions\">\n            <div class=\"action-item\" @click=\"toggleLike(post.id)\">\n              <i :class=\"{ 'el-icon-heart': !post.liked, 'el-icon-heart-on': post.liked }\" :style=\"{ color: post.liked ? '#ff4d4f' : '' }\"></i>\n              <span>{{ post.likesCount }}</span>\n            </div>\n            <div class=\"action-item\" @click=\"toggleComment(post.id)\">\n              <i class=\"el-icon-chat-dot-round\"></i>\n              <span>{{ post.comments.length }}</span>\n            </div>\n          </div>\n          <!-- 评论区域 -->\n          <div class=\"comments-section\" v-if=\"post.showComments\">\n            <div v-for=\"comment in post.comments\" :key=\"comment.id\" class=\"comment-item\">\n              <img :src=\"comment.userAvatar\" alt=\"评论用户头像\" class=\"comment-avatar\">\n              <div class=\"comment-content\">\n                <div class=\"comment-header\">\n                  <span class=\"comment-username\">{{ comment.username }}</span>\n                  <span class=\"comment-time\">{{ comment.time }}</span>\n                </div>\n                <div class=\"comment-text\">{{ comment.content }}</div>\n              </div>\n            </div>\n            <div class=\"add-comment\">\n              <el-input\n                v-model=\"commentContent[post.id]\"\n                placeholder=\"添加评论...\"\n                @keyup.enter.native=\"addComment(post.id)\"\n              ></el-input>\n              <el-button size=\"small\" type=\"primary\" @click=\"addComment(post.id)\">发送</el-button>\n            </div>\n          </div>\n        </el-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ForumPage',\n  data() {\n    return {\n      activeIndex: '5',\n      postContent: '',\n      commentContent: {},\n      posts: []\n    };\n  },\n  mounted() {\n    // 组件挂载时加载最新动态\n    this.loadPosts();\n  },\n  methods: {\n    // 加载最新动态\n    loadPosts() {\n      this.$axios.get('/api/forum/posts')\n        .then(response => {\n          this.posts = response.data;\n        })\n        .catch(error => {\n          console.error('加载动态失败:', error);\n          this.$message.error('加载动态失败，请稍后重试');\n        });\n    },\n    createPost() {\n      if (!this.postContent.trim()) {\n        this.$message.warning('内容不能为空');\n        return;\n      }\n\n      this.$axios.post('/api/forum/posts', {\n        content: this.postContent\n      })\n        .then(response => {\n          // 发布成功后刷新动态列表\n          this.loadPosts();\n          this.postContent = '';\n          this.$message.success('发布成功');\n        })\n        .catch(error => {\n          console.error('发布动态失败:', error);\n          this.$message.error('发布动态失败，请稍后重试');\n        });\n    }\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn || true; // 模拟登录状态\n    },\n    currentUser() {\n      return this.$store.getters.currentUser || { username: '当前用户', role: 1 }; // 模拟用户数据\n    }\n  },\n  methods: {\n    handleSelect(key) {\n      switch(key) {\n        case '1':\n          this.$router.push('/');\n          break;\n        case '2':\n          this.$router.push('/jobs');\n          break;\n        case '3':\n          this.$router.push('/companies');\n          break;\n        case '4':\n          this.$router.push('/chat');\n          break;\n        case '5':\n          if (this.$route.path !== '/forum') {\n            this.$router.push('/forum');\n          }\n          break;\n        case '6':\n          this.$router.push('/login');\n          break;\n        case '7':\n          this.$router.push('/register');\n          break;\n        case '8-1':\n          this.$router.push('/user');\n          break;\n        case '8-2':\n          this.$router.push('/admin');\n          break;\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$message.success('退出登录成功');\n      this.$router.push('/');\n    },\n    createPost() {\n      if (!this.postContent.trim()) {\n        this.$message.warning('内容不能为空');\n        return;\n      }\n\n      const newPost = {\n        id: this.posts.length + 1,\n        username: this.currentUser.username,\n        userAvatar: `https://picsum.photos/200/200?random=${Math.floor(Math.random() * 100)}`,\n        content: this.postContent,\n        time: '刚刚',\n        likesCount: 0,\n        liked: false,\n        showComments: false,\n        comments: []\n      };\n\n      this.posts.unshift(newPost);\n      this.postContent = '';\n      this.$message.success('发布成功');\n    },\n    toggleLike(postId) {\n      const post = this.posts.find(p => p.id === postId);\n      if (post) {\n        if (post.liked) {\n          post.likesCount--;\n        } else {\n          post.likesCount++;\n        }\n        post.liked = !post.liked;\n      }\n    },\n    toggleComment(postId) {\n      const post = this.posts.find(p => p.id === postId);\n      if (post) {\n        post.showComments = !post.showComments;\n        // 初始化评论输入框\n        if (!this.commentContent[postId]) {\n          this.commentContent[postId] = '';\n        }\n      }\n    },\n    addComment(postId) {\n      const content = this.commentContent[postId];\n      if (!content.trim()) {\n        this.$message.warning('评论内容不能为空');\n        return;\n      }\n\n      const post = this.posts.find(p => p.id === postId);\n      if (post) {\n        const newComment = {\n          id: post.comments.length + 1,\n          username: this.currentUser.username,\n          userAvatar: `https://picsum.photos/200/200?random=${Math.floor(Math.random() * 100)}`,\n          content: content,\n          time: '刚刚'\n        };\n\n        post.comments.push(newComment);\n        this.commentContent[postId] = '';\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.forum-container {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.forum-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n\n.post-create {\n  margin-bottom: 30px;\n}\n\n.post-form {\n  margin-top: 15px;\n}\n\n.post-actions {\n  text-align: right;\n  margin-top: 10px;\n}\n\n.posts-list h3 {\n  font-size: 20px;\n  margin-bottom: 15px;\n  color: #333;\n}\n\n.post-card {\n  margin-bottom: 20px;\n}\n\n.post-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.user-info {\n  flex: 1;\n}\n\n.username {\n  font-weight: bold;\n  margin-bottom: 2px;\n}\n\n.post-time {\n  font-size: 12px;\n  color: #999;\n}\n\n.post-content {\n  margin-bottom: 15px;\n  line-height: 1.6;\n}\n\n.post-actions {\n  display: flex;\n  justify-content: space-between;\n  padding-top: 10px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.action-item {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: #666;\n}\n\n.action-item i {\n  margin-right: 5px;\n}\n\n.comments-section {\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.comment-item {\n  display: flex;\n  margin-bottom: 15px;\n}\n\n.comment-avatar {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.comment-content {\n  flex: 1;\n  background-color: #f5f5f5;\n  padding: 10px;\n  border-radius: 8px;\n}\n\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.comment-username {\n  font-weight: bold;\n  font-size: 14px;\n}\n\n.comment-time {\n  font-size: 12px;\n  color: #999;\n}\n\n.comment-text {\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.add-comment {\n  display: flex;\n  margin-top: 15px;\n}\n\n.add-comment .el-input {\n  flex: 1;\n  margin-right: 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}